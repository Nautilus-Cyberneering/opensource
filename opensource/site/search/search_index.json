{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Open Source Project Guide For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Open Source Project Guide"},{"location":"#open-source-project-guide","text":"For full documentation visit mkdocs.org .","title":"Open Source Project Guide"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"releases-process/","text":"Version number scheme Boken Engine follows the usual version number convention described as: x.y.z , where: x: is the Major version number, and is only incremented when a significant amount of new functionality is added to the previous release. This new major version may not be completely backwards compatible with major versions lesser than this. y: is the Minor version number, and is only incremented when some, backwards-compabile functionality is added to the previous release. z: is the Patch version number, and is incremented when bug fixes and improvements that do not change the API are added to the previous release. Release candidates When there are enough changes to the code to increment version number, a release candidate is created by tagging the codebase which is intended to release with the schema: x.y.z-RC1, where x.y.z is the version number to be released. When all code tests (see release process steps ) are passed sucessfully, this Release Candidate becomes the new release. If a test fails, the new patched version will be the Release Candidate 2 (RC2), and so on. When to release a new version A new version should be released when: A new functionality changes the API specification or behaviour. Requested improvements and relevant new features are added. Fixes are made to relevant bugs. Release process steps Create a new branch properly tagged with the new candidate. For instance, if we want to release 1.2.3, the new tag should be called 1.2.3-RC1 Until the release process is finished, all new commits should be done to a separate, non main branch. Run all the mandatory check to guarantee code stability: Complete build with no error nor warnings All automated code tests Swiftlint and Tailor Linters Lizard code quality tool It is convenient to check the new version in a sample host application that worked fine in the previous version (unless a backwards-incompatible major version release) If some of the previous checks fail, fix what causes it and commit them incrementing Release Candidate number. If all checks passes, continue with next step. Tag the commit which points to the code which is going to be released (sucessfully tested RC). Modify PodSpec file according to the new tag and version number. Modify changelog file Merge the release branch to main branch (no conflicts should exists as no new commits should have been made to the main branch). Release is finished. References http://oss-watch.ac.uk/resources/releasemanagement https://en.wikipedia.org/wiki/Software_versioning https://en.wikipedia.org/wiki/Software_release_life_cycle https://semver.org/","title":"Version number scheme"},{"location":"releases-process/#version-number-scheme","text":"Boken Engine follows the usual version number convention described as: x.y.z , where: x: is the Major version number, and is only incremented when a significant amount of new functionality is added to the previous release. This new major version may not be completely backwards compatible with major versions lesser than this. y: is the Minor version number, and is only incremented when some, backwards-compabile functionality is added to the previous release. z: is the Patch version number, and is incremented when bug fixes and improvements that do not change the API are added to the previous release.","title":"Version number scheme"},{"location":"releases-process/#release-candidates","text":"When there are enough changes to the code to increment version number, a release candidate is created by tagging the codebase which is intended to release with the schema: x.y.z-RC1, where x.y.z is the version number to be released. When all code tests (see release process steps ) are passed sucessfully, this Release Candidate becomes the new release. If a test fails, the new patched version will be the Release Candidate 2 (RC2), and so on.","title":"Release candidates"},{"location":"releases-process/#when-to-release-a-new-version","text":"A new version should be released when: A new functionality changes the API specification or behaviour. Requested improvements and relevant new features are added. Fixes are made to relevant bugs.","title":"When to release a new version"},{"location":"releases-process/#release-process-steps","text":"Create a new branch properly tagged with the new candidate. For instance, if we want to release 1.2.3, the new tag should be called 1.2.3-RC1 Until the release process is finished, all new commits should be done to a separate, non main branch. Run all the mandatory check to guarantee code stability: Complete build with no error nor warnings All automated code tests Swiftlint and Tailor Linters Lizard code quality tool It is convenient to check the new version in a sample host application that worked fine in the previous version (unless a backwards-incompatible major version release) If some of the previous checks fail, fix what causes it and commit them incrementing Release Candidate number. If all checks passes, continue with next step. Tag the commit which points to the code which is going to be released (sucessfully tested RC). Modify PodSpec file according to the new tag and version number. Modify changelog file Merge the release branch to main branch (no conflicts should exists as no new commits should have been made to the main branch). Release is finished.","title":"Release process steps"},{"location":"releases-process/#references","text":"http://oss-watch.ac.uk/resources/releasemanagement https://en.wikipedia.org/wiki/Software_versioning https://en.wikipedia.org/wiki/Software_release_life_cycle https://semver.org/","title":"References"},{"location":"sample_conclusions/BOKEN%20ENGINE%20%E2%80%93%20Proposed%20Business%20Model/","text":"BOKEN ENGINE \u2013 Proposed Business Model Objective of the proposed business model canvas The objective of the proposed canvas is to reflect what is possible and what elements are relevant to be considered in this model. The proposed elements are assumptions that will need to be validated and which have been made upon the previous research done on this topic by our team. For the current proposed business model, the following considerations have been considered: - Project License & Philosophy - Current state of the software - Current objectives of the project - Available resource limitations License & Philosophy One of the main objectives of the project is to make our solution available to all and have people contribute and evolve it for the benefit of everyone who wants to use it. MPL Licensing options grants the possibility to also use the code and expand it clearly differentiating the proprietary code from the free open-source code. We want the project to become a relevant and useful tool for our users so that we will add new features based upon cumulative future requests and inquiries or financial support received for specific purposes. If you want to make money using Boken Engine you can do so and should not be hampered in doing this, leaving the door open to different options for the creation of additional paid and unpaid features by the Boken Team and other developers. Current state of the software The Boken Engine software now (2021 March) does not have any visual user interface and requires both for install and productive use development skills, which excludes non developers from using it on their own. The current proposed business model reflects this fact and is built upon this underlying condition. Current objectives of the project The current objective for us is to make advertise and make our project known to the public be they developers or end users. To incentivize developers to contribute and use the Boken Engine. To capture the attention and display the potential of this solution. To further develop its features and usability. To cover costs. To test the different elements of the business model. To create a beautiful Demo that will display all the current potential of Boken Engine. Proposed Business Model The proposed business model is a combination of the researched business models and an idea of crowdsourcing funds through the creation of our own demo apps as a form to create and display the potential of our tool. The two main business models that we believe can be employed are the standard Support Service Model and the Related Services or Products model which are feasible with the chosen MPL license. For the model to cover costs at first, and in the future to become profitable to further explore and expand it, it is essential to keep it as open as possible and that we make high quality examples of what can be achieved with our solution to incentivize adoption. Each of the elements will be explained in more detail below. Customer Segments These are the initial customer groups that we can aim at given the state of the software and based upon the services and products that we can deliver right now with a reasonable effort and considering our own available resources. Customer relationships The relationships with contributors and the users that we can currently address through the different platforms that are either already set up or can be set up. GITHUB community a related forum and a website or blog of the project to keep people updated on the progress. Initially the effort will be minimal except for the technical setup of the various elements in this section. At a later stage when more people join the effort will increase, for instance the Project Community of contributors etc. will have to be daily, a blog letter should if possible be weekly. On the other hand, if we are to run a Kickstarter Campaign, we will have to prepare to interact daily to take care of followers and buyers. Channels These are the points of contact with potential customers and contributors. We believe that the main channels are going to be digital and online, most of them being free and with no monetary cost except for the time we will have to dedicate to this task. The ones that we believe will be free are marked in light Green. The Demo app can be seen as a channel two since it will help us reach customers through branding it and including links to our website, Github etc. The requirement of time for this app we estimate it to be 40 MDs. Depending on whether we decide to launch a Kickstarter Campaign this has the potential to be sales and promotion channel for the project that could reach End Users of this type of final apps. Key propositions - Value Creation These are the main benefits of using Boken Engine for the different customer Groups and the services that will be provided. For better understanding we have divided them in areas: - Source Code Related - License Related - Community Related Key Activities The relevant activities to engage to make the model work are the tasks or things that we need to engage with and accomplish. Here we believe that it is going to be, such as developing Boken Engine more, develop support material such as video tutorials, documentation, basic marketing, through the mentioned channels. Key Resources These are the elements that are essential to our activities, our experts the community and design resources for any app that we will make, and which will have to be found. Key Partners To gain competitive advantage we heavily rely on our success to create a large community of contributors and users, in addition to sufficient adoption of Boken Engine so that independent software developers start to adopt it for work related issues. Cost Structure This section reflects the approximate costs in time that we expect to have during the coming three 4 months, and the cost streams, our own in-house developers, etc. Also, I have indicated the possibility of a marketing budget, depending on the internal funds that we will get access to. Revenue Streams For the coming 4 months no revenues are expected. The intention and main goals are to create a steady flow of revenues to support the continuing growth of Boken Engine. The main volume if we adhere to this business model and gain traction will come mostly from support services such as consulting, custom developments, support and documentation. As a second potential stream we think that it is interesting to explore Kickstarter crowdsourcing. If we are able to launch and successfully run a Kickstarter campaign to promote our own apps we could expect a certain amount of revenues also from this source. We believe that a Kickstarter Campaign for the creation of the High-Quality Demo App is a way that we can explore since it can help us meet several goals at once: - Create publicity for the project over the Kickstarter Campaign period. - Display the potential of the potential of the Boken Engine. - Market research as to the features that end users, the consumers of apps made with Boken Engine would like to see and value. - Create revenues to continue our work Boken Engine and grow our community. Future evolution of the software and business model The future evolution and roadmap of the software will shape the additional elements that will be included in the business model. For instance, if the project improves its usability and ease of installation in the future End Users will not require any development skills to install and use the Boken Engine. This for example would open additional possibilities to expand the number of potential users and help its adoption and growth. Also, no business model is fixed in stone, it is an evolutionary system which evolves to serve the needs of customers and also adapt to market conditions; therefore, it is always open to change.","title":"BOKEN ENGINE \u2013 Proposed Business Model"},{"location":"sample_conclusions/BOKEN%20ENGINE%20%E2%80%93%20Proposed%20Business%20Model/#boken-engine-proposed-business-model","text":"","title":"BOKEN ENGINE \u2013 Proposed Business Model"},{"location":"sample_conclusions/BOKEN%20ENGINE%20%E2%80%93%20Proposed%20Business%20Model/#objective-of-the-proposed-business-model-canvas","text":"The objective of the proposed canvas is to reflect what is possible and what elements are relevant to be considered in this model. The proposed elements are assumptions that will need to be validated and which have been made upon the previous research done on this topic by our team. For the current proposed business model, the following considerations have been considered: - Project License & Philosophy - Current state of the software - Current objectives of the project - Available resource limitations","title":"Objective of the proposed business model canvas"},{"location":"sample_conclusions/BOKEN%20ENGINE%20%E2%80%93%20Proposed%20Business%20Model/#license-philosophy","text":"One of the main objectives of the project is to make our solution available to all and have people contribute and evolve it for the benefit of everyone who wants to use it. MPL Licensing options grants the possibility to also use the code and expand it clearly differentiating the proprietary code from the free open-source code. We want the project to become a relevant and useful tool for our users so that we will add new features based upon cumulative future requests and inquiries or financial support received for specific purposes. If you want to make money using Boken Engine you can do so and should not be hampered in doing this, leaving the door open to different options for the creation of additional paid and unpaid features by the Boken Team and other developers.","title":"License &amp; Philosophy"},{"location":"sample_conclusions/BOKEN%20ENGINE%20%E2%80%93%20Proposed%20Business%20Model/#current-state-of-the-software","text":"The Boken Engine software now (2021 March) does not have any visual user interface and requires both for install and productive use development skills, which excludes non developers from using it on their own. The current proposed business model reflects this fact and is built upon this underlying condition.","title":"Current state of the software"},{"location":"sample_conclusions/BOKEN%20ENGINE%20%E2%80%93%20Proposed%20Business%20Model/#current-objectives-of-the-project","text":"The current objective for us is to make advertise and make our project known to the public be they developers or end users. To incentivize developers to contribute and use the Boken Engine. To capture the attention and display the potential of this solution. To further develop its features and usability. To cover costs. To test the different elements of the business model. To create a beautiful Demo that will display all the current potential of Boken Engine.","title":"Current objectives of the project"},{"location":"sample_conclusions/BOKEN%20ENGINE%20%E2%80%93%20Proposed%20Business%20Model/#proposed-business-model","text":"The proposed business model is a combination of the researched business models and an idea of crowdsourcing funds through the creation of our own demo apps as a form to create and display the potential of our tool. The two main business models that we believe can be employed are the standard Support Service Model and the Related Services or Products model which are feasible with the chosen MPL license. For the model to cover costs at first, and in the future to become profitable to further explore and expand it, it is essential to keep it as open as possible and that we make high quality examples of what can be achieved with our solution to incentivize adoption. Each of the elements will be explained in more detail below.","title":"Proposed Business Model"},{"location":"sample_conclusions/BOKEN%20ENGINE%20%E2%80%93%20Proposed%20Business%20Model/#customer-segments","text":"These are the initial customer groups that we can aim at given the state of the software and based upon the services and products that we can deliver right now with a reasonable effort and considering our own available resources.","title":"Customer Segments"},{"location":"sample_conclusions/BOKEN%20ENGINE%20%E2%80%93%20Proposed%20Business%20Model/#customer-relationships","text":"The relationships with contributors and the users that we can currently address through the different platforms that are either already set up or can be set up. GITHUB community a related forum and a website or blog of the project to keep people updated on the progress. Initially the effort will be minimal except for the technical setup of the various elements in this section. At a later stage when more people join the effort will increase, for instance the Project Community of contributors etc. will have to be daily, a blog letter should if possible be weekly. On the other hand, if we are to run a Kickstarter Campaign, we will have to prepare to interact daily to take care of followers and buyers. Channels These are the points of contact with potential customers and contributors. We believe that the main channels are going to be digital and online, most of them being free and with no monetary cost except for the time we will have to dedicate to this task. The ones that we believe will be free are marked in light Green. The Demo app can be seen as a channel two since it will help us reach customers through branding it and including links to our website, Github etc. The requirement of time for this app we estimate it to be 40 MDs. Depending on whether we decide to launch a Kickstarter Campaign this has the potential to be sales and promotion channel for the project that could reach End Users of this type of final apps.","title":"Customer relationships"},{"location":"sample_conclusions/BOKEN%20ENGINE%20%E2%80%93%20Proposed%20Business%20Model/#key-propositions-value-creation","text":"These are the main benefits of using Boken Engine for the different customer Groups and the services that will be provided. For better understanding we have divided them in areas: - Source Code Related - License Related - Community Related","title":"Key propositions - Value Creation"},{"location":"sample_conclusions/BOKEN%20ENGINE%20%E2%80%93%20Proposed%20Business%20Model/#key-activities","text":"The relevant activities to engage to make the model work are the tasks or things that we need to engage with and accomplish. Here we believe that it is going to be, such as developing Boken Engine more, develop support material such as video tutorials, documentation, basic marketing, through the mentioned channels.","title":"Key Activities"},{"location":"sample_conclusions/BOKEN%20ENGINE%20%E2%80%93%20Proposed%20Business%20Model/#key-resources","text":"These are the elements that are essential to our activities, our experts the community and design resources for any app that we will make, and which will have to be found.","title":"Key Resources"},{"location":"sample_conclusions/BOKEN%20ENGINE%20%E2%80%93%20Proposed%20Business%20Model/#key-partners","text":"To gain competitive advantage we heavily rely on our success to create a large community of contributors and users, in addition to sufficient adoption of Boken Engine so that independent software developers start to adopt it for work related issues.","title":"Key Partners"},{"location":"sample_conclusions/BOKEN%20ENGINE%20%E2%80%93%20Proposed%20Business%20Model/#cost-structure","text":"This section reflects the approximate costs in time that we expect to have during the coming three 4 months, and the cost streams, our own in-house developers, etc. Also, I have indicated the possibility of a marketing budget, depending on the internal funds that we will get access to.","title":"Cost Structure"},{"location":"sample_conclusions/BOKEN%20ENGINE%20%E2%80%93%20Proposed%20Business%20Model/#revenue-streams","text":"For the coming 4 months no revenues are expected. The intention and main goals are to create a steady flow of revenues to support the continuing growth of Boken Engine. The main volume if we adhere to this business model and gain traction will come mostly from support services such as consulting, custom developments, support and documentation. As a second potential stream we think that it is interesting to explore Kickstarter crowdsourcing. If we are able to launch and successfully run a Kickstarter campaign to promote our own apps we could expect a certain amount of revenues also from this source. We believe that a Kickstarter Campaign for the creation of the High-Quality Demo App is a way that we can explore since it can help us meet several goals at once: - Create publicity for the project over the Kickstarter Campaign period. - Display the potential of the potential of the Boken Engine. - Market research as to the features that end users, the consumers of apps made with Boken Engine would like to see and value. - Create revenues to continue our work Boken Engine and grow our community.","title":"Revenue Streams"},{"location":"sample_conclusions/BOKEN%20ENGINE%20%E2%80%93%20Proposed%20Business%20Model/#future-evolution-of-the-software-and-business-model","text":"The future evolution and roadmap of the software will shape the additional elements that will be included in the business model. For instance, if the project improves its usability and ease of installation in the future End Users will not require any development skills to install and use the Boken Engine. This for example would open additional possibilities to expand the number of potential users and help its adoption and growth. Also, no business model is fixed in stone, it is an evolutionary system which evolves to serve the needs of customers and also adapt to market conditions; therefore, it is always open to change.","title":"Future evolution of the software and business model"},{"location":"sample_conclusions/proposal_governance_bdfl/","text":"Governance Overview This project is led by a benevolent dictator and managed by the community. That is, the community actively contributes to the day-to-day maintenance of the project, but the general strategic line is drawn by the benevolent dictator. In case of disagreement, they have the last word. It is the benevolent dictator\u2019s job to resolve disputes within the community and to ensure that the project is able to progress in a coordinated way. In turn, it is the community\u2019s job to guide the decisions of the benevolent dictator through active engagement and contribution. Roles And Responsibilities Benevolent dictator (project lead) Typically, the benevolent dictator, or project lead, is self-appointed. However, because the community always has the ability to fork, this person is fully answerable to the community. The project lead\u2019s role is a difficult one: they set the strategic objectives of the project and communicate these clearly to the community. They also have to understand the community as a whole and strive to satisfy as many conflicting needs as possible, while ensuring that the project survives in the long term. In many ways, the role of the benevolent dictator is less about dictatorship and more about diplomacy. The key is to ensure that, as the project expands, the right people are given influence over it and the community rallies behind the vision of the project lead. The lead\u2019s job is then to ensure that the committers (see below) make the right decisions on behalf of the project. Generally speaking, as long as the committers are aligned with the project\u2019s strategy, the project lead will allow them to proceed as they desire. Committers Committers are contributors who have made several valuable contributions to the project and are now relied upon to both write code directly to the repository and screen the contributions of others. In many cases they are programmers but it is also possible that they contribute in a different role. Typically, a committer will focus on a specific aspect of the project, and will bring a level of expertise and understanding that earns them the respect of the community and the project lead. The role of committer is not an official one, it is simply a position that influential members of the community will find themselves in as the project lead looks to them for guidance and support. Committers have no authority over the overall direction of the project. However, they do have the ear of the project lead. It is a committer\u2019s job to ensure that the lead is aware of the community\u2019s needs and collective objectives, and to help develop or elicit appropriate contributions to the project. Often, committers are given informal control over their specific areas of responsibility, and are assigned rights to directly modify certain areas of the source code. That is, although committers do not have explicit decision-making authority, they will often find that their actions are synonymous with the decisions made by the lead. Contributors Contributors are community members who either have no desire to become committers, or have not yet been given the opportunity by the benevolent dictator. They make valuable contributions, such as those outlined in the list below, but generally do not have the authority to make direct changes to the project code. [TBD] Contributors engage with the project through communication tools ~~, such as email lists, and via reports and patches attached to issues in the issue tracker~~. Anyone can become a contributor. There is no expectation of commitment to the project, no specific skill requirements and no selection process. To become a contributor, a community member simply has to perform one or more actions that are beneficial to the project. Some contributors will already be engaging with the project as users, but will also find themselves doing one or more of the following: supporting new users (current users often provide the most effective new user support) reporting bugs identifying requirements supplying graphics and web design programming assisting with project infrastructure writing documentation fixing bugs adding features As contributors gain experience and familiarity with the project, they may find that the project lead starts relying on them more and more. When this begins to happen, they gradually adopt the role of committer, as described above. Users Users are community members who have a need for the project. They are the most important members of the community: without them, the project would have no purpose. Anyone can be a user; there are no specific requirements. Users should be encouraged to participate in the life of the project and the community as much as possible. User contributions enable the project team to ensure that they are satisfying the needs of those users. Common user activities include (but are not limited to): evangelising about the project informing developers of project strengths and weaknesses from a new user\u2019s perspective providing moral support (a \u2018thank you\u2019 goes a long way) providing financial support Users who continue to engage with the project and its community will often find themselves becoming more and more involved. Such users may then go on to become contributors, as described above. Support All participants in the community are encouraged to provide support for new users within the project management infrastructure. This support is provided as a way of growing the community. Those seeking support should recognise that all support activity within the project is voluntary and is therefore provided as and when time allows. A user requiring guaranteed response times or results should therefore seek to purchase a support contract from a vendor. (Of course, that vendor should be an active member of the community.) However, for those willing to engage with the project on its own terms, and willing to help support other users, the community support channels are ideal. Contribution Process Anyone can contribute to the project, regardless of their skills, as there are many ways to contribute. For instance, a contributor might be active on the [TBD] ~~project mailing list and~~ issue tracker, or might supply patches. The various ways of contributing are described in more detail in CONTRIBUTING . [TBD] The developer mailing list is the most appropriate place for a contributor to ask for help when making their first contribution. Decision-Making Process The benevolent dictatorship model does not need a formal conflict resolution process, since the project lead\u2019s word is final. If the community chooses to question the wisdom of the actions of a committer, the project lead can review their decisions by checking the email archives, and either uphold or reverse them.","title":"Governance"},{"location":"sample_conclusions/proposal_governance_bdfl/#governance","text":"","title":"Governance"},{"location":"sample_conclusions/proposal_governance_bdfl/#overview","text":"This project is led by a benevolent dictator and managed by the community. That is, the community actively contributes to the day-to-day maintenance of the project, but the general strategic line is drawn by the benevolent dictator. In case of disagreement, they have the last word. It is the benevolent dictator\u2019s job to resolve disputes within the community and to ensure that the project is able to progress in a coordinated way. In turn, it is the community\u2019s job to guide the decisions of the benevolent dictator through active engagement and contribution.","title":"Overview"},{"location":"sample_conclusions/proposal_governance_bdfl/#roles-and-responsibilities","text":"","title":"Roles And Responsibilities"},{"location":"sample_conclusions/proposal_governance_bdfl/#benevolent-dictator-project-lead","text":"Typically, the benevolent dictator, or project lead, is self-appointed. However, because the community always has the ability to fork, this person is fully answerable to the community. The project lead\u2019s role is a difficult one: they set the strategic objectives of the project and communicate these clearly to the community. They also have to understand the community as a whole and strive to satisfy as many conflicting needs as possible, while ensuring that the project survives in the long term. In many ways, the role of the benevolent dictator is less about dictatorship and more about diplomacy. The key is to ensure that, as the project expands, the right people are given influence over it and the community rallies behind the vision of the project lead. The lead\u2019s job is then to ensure that the committers (see below) make the right decisions on behalf of the project. Generally speaking, as long as the committers are aligned with the project\u2019s strategy, the project lead will allow them to proceed as they desire.","title":"Benevolent dictator (project lead)"},{"location":"sample_conclusions/proposal_governance_bdfl/#committers","text":"Committers are contributors who have made several valuable contributions to the project and are now relied upon to both write code directly to the repository and screen the contributions of others. In many cases they are programmers but it is also possible that they contribute in a different role. Typically, a committer will focus on a specific aspect of the project, and will bring a level of expertise and understanding that earns them the respect of the community and the project lead. The role of committer is not an official one, it is simply a position that influential members of the community will find themselves in as the project lead looks to them for guidance and support. Committers have no authority over the overall direction of the project. However, they do have the ear of the project lead. It is a committer\u2019s job to ensure that the lead is aware of the community\u2019s needs and collective objectives, and to help develop or elicit appropriate contributions to the project. Often, committers are given informal control over their specific areas of responsibility, and are assigned rights to directly modify certain areas of the source code. That is, although committers do not have explicit decision-making authority, they will often find that their actions are synonymous with the decisions made by the lead.","title":"Committers"},{"location":"sample_conclusions/proposal_governance_bdfl/#contributors","text":"Contributors are community members who either have no desire to become committers, or have not yet been given the opportunity by the benevolent dictator. They make valuable contributions, such as those outlined in the list below, but generally do not have the authority to make direct changes to the project code. [TBD] Contributors engage with the project through communication tools ~~, such as email lists, and via reports and patches attached to issues in the issue tracker~~. Anyone can become a contributor. There is no expectation of commitment to the project, no specific skill requirements and no selection process. To become a contributor, a community member simply has to perform one or more actions that are beneficial to the project. Some contributors will already be engaging with the project as users, but will also find themselves doing one or more of the following: supporting new users (current users often provide the most effective new user support) reporting bugs identifying requirements supplying graphics and web design programming assisting with project infrastructure writing documentation fixing bugs adding features As contributors gain experience and familiarity with the project, they may find that the project lead starts relying on them more and more. When this begins to happen, they gradually adopt the role of committer, as described above.","title":"Contributors"},{"location":"sample_conclusions/proposal_governance_bdfl/#users","text":"Users are community members who have a need for the project. They are the most important members of the community: without them, the project would have no purpose. Anyone can be a user; there are no specific requirements. Users should be encouraged to participate in the life of the project and the community as much as possible. User contributions enable the project team to ensure that they are satisfying the needs of those users. Common user activities include (but are not limited to): evangelising about the project informing developers of project strengths and weaknesses from a new user\u2019s perspective providing moral support (a \u2018thank you\u2019 goes a long way) providing financial support Users who continue to engage with the project and its community will often find themselves becoming more and more involved. Such users may then go on to become contributors, as described above.","title":"Users"},{"location":"sample_conclusions/proposal_governance_bdfl/#support","text":"All participants in the community are encouraged to provide support for new users within the project management infrastructure. This support is provided as a way of growing the community. Those seeking support should recognise that all support activity within the project is voluntary and is therefore provided as and when time allows. A user requiring guaranteed response times or results should therefore seek to purchase a support contract from a vendor. (Of course, that vendor should be an active member of the community.) However, for those willing to engage with the project on its own terms, and willing to help support other users, the community support channels are ideal.","title":"Support"},{"location":"sample_conclusions/proposal_governance_bdfl/#contribution-process","text":"Anyone can contribute to the project, regardless of their skills, as there are many ways to contribute. For instance, a contributor might be active on the [TBD] ~~project mailing list and~~ issue tracker, or might supply patches. The various ways of contributing are described in more detail in CONTRIBUTING . [TBD] The developer mailing list is the most appropriate place for a contributor to ask for help when making their first contribution.","title":"Contribution Process"},{"location":"sample_conclusions/proposal_governance_bdfl/#decision-making-process","text":"The benevolent dictatorship model does not need a formal conflict resolution process, since the project lead\u2019s word is final. If the community chooses to question the wisdom of the actions of a committer, the project lead can review their decisions by checking the email archives, and either uphold or reverse them.","title":"Decision-Making Process"},{"location":"sample_conclusions/proposal_governance_liberal/","text":"Governance Overview This is an open, consensus-based community project. Anyone with an interest in the project can join the community, contribute to the project design and participate in the decision making process. This document describes how that participation takes place and how to set about earning merit within the project community. Roles And Responsibilities Users Users are community members who have a need for the project. They are the most important members of the community and without them the project would have no purpose. Anyone can be a user; there are no special requirements. The project asks its users to participate in the project and community as much as possible. User contributions enable the project team to ensure that they are satisfying the needs of those users. User's Tasks Common user contributions include (but are not limited to): evangelising about the project (e.g. a link on a website and word-of-mouth awareness raising) informing developers of strengths and weaknesses from a new user perspective providing moral support (a 'thank you' goes a long way) providing financial support (the software is open source, but its developers need to eat) Users who continue to engage with the project and its community will often become more and more involved. Such users may find themselves becoming contributors, as described in the next section. Contributors Contributors are community members who contribute in concrete ways to the project. Anyone can become a contributor, and contributions can take many forms. There is no expectation of commitment to the project, no specific skill requirements and no selection process. Contributors' Tasks In addition to their actions as users, contributors may also find themselves doing one or more of the following: supporting new users (existing users are often the best people to support new users) reporting bugs identifying requirements providing graphics and web design programming assisting with project infrastructure writing documentation fixing bugs adding features Contributors engage with the project through the issue tracker on GitHub [TBD] ~~and mailing list~~, creating or commenting on an issue or pull request, or by writing or editing documentation. They submit changes to the project itself via pull requests, which will be considered for inclusion in the project by existing committers (see next section). [TBD] ~~The developer mailing list is the most appropriate place to ask for help when making that first contribution.~~ As contributors gain experience and familiarity with the project, their profile within, and commitment to, the community will increase. At some stage, they may find themselves being nominated for committership. Committers Committers are community members who have shown that they are committed to the continued development of the project through ongoing engagement with the community. Committership allows contributors to more easily carry on with their project related activities by giving them direct access to the project\u2019s resources (e.g. write access to the repository). That is, they can make changes directly to project outputs, without having to submit changes via patches. This does not mean that a committer is free to do what they want. In fact, committers have no more authority over the project than contributors. While committership indicates a valued member of the community who has demonstrated a healthy respect for the project\u2019s aims and objectives, their work continues to be reviewed by the community before acceptance in an official release. The key difference between a committer and a contributor is when this approval is sought from the community. A committer seeks approval after the contribution is made, rather than before. Seeking approval after making a contribution is known as a commit-then-review process. It is more efficient to allow trusted people to make direct contributions, as the majority of those contributions will be accepted by the project. The project employs various communication mechanisms to ensure that all contributions are reviewed by the community as a whole. By the time a contributor is invited to become a committer, they will have become familiar with the project\u2019s various tools as a user and then as a contributor. Anyone can become a committer; there are no special requirements, other than to have shown a willingness and ability to participate in the project as a team player. Typically, a potential committer will need to show that they have an understanding of the project, its objectives and its strategy. They will also have provided valuable contributions to the project over a period of time. How to become a commiter New committers can be nominated by any existing committer. Once they have been nominated, there will be a vote by the project management committee (PMC; see below). [TBD] ~~Committer voting is one of the few activities that takes place on the project\u2019s private management list~~. This is to allow PMC members to freely express their opinions about a nominee without causing embarrassment. Once the vote has been held, the aggregated voting results are published [TBD] ~~on the public mailing list~~. The nominee is entitled to request an explanation of any \u2018no\u2019 votes against them, regardless of the outcome of the vote. This explanation will be provided by the PMC Chair (see below) and will be anonymous and constructive in nature. Nominees may decline their appointment as a committer. However, this is unusual, as the project does not expect any specific time or resource commitment from its community members. The intention behind the role of committer is to allow people to contribute to the project more easily, not to tie them in to the project in any formal way. It is important to recognise that commitership is a privilege, not a right. That privilege must be earned and once earned it can be removed by the PMC (see next section) in extreme circumstances. However, under normal circumstances committership exists for as long as the committer wishes to continue engaging with the project. A committer who shows an above-average level of contribution to the project, particularly with respect to its strategic direction and long-term health, may be nominated to become a member of the PMC. This role is described below. Project management committee The project management committee consists of those individuals identified as \u2018project owners\u2019 on the development site. The PMC has additional responsibilities over and above those of a committer. These responsibilities ensure the smooth running of the project. PMC members are expected to review code contributions, participate in strategic planning, approve changes to the governance model and manage the copyrights within the project outputs. Members of the PMC do not have significant authority over other members of the community, although it is the PMC that votes on new committers. It also makes decisions when community consensus cannot be reached. [TBD] ~~In addition, the PMC has access to the project\u2019s private mailing list and its archives. This list is used for sensitive issues, such as votes for new committers and legal matters that cannot be discussed in public. It is never used for project management or planning.~~ Membership of the PMC is by invitation from the existing PMC members. A nomination will result in discussion and then a vote by the existing PMC members. PMC membership votes are subject to consensus approval of the current PMC members. Support All participants in the community are encouraged to provide support for new users within the project management infrastructure. This support is provided as a way of growing the community. Those seeking support should recognise that all support activity within the project is voluntary and is therefore provided as and when time allows. A user requiring guaranteed response times or results should therefore seek to purchase a support contract from a community member. However, for those willing to engage with the project on its own terms, and willing to help support other users, the community support channels are ideal. Contribution Process Anyone can contribute to the project, regardless of their skills, as there are many ways to contribute. For instance, a contributor might be active on the [TBD] ~~project mailing list and~~ issue tracker, or might supply patches. The various ways of contributing are described in more detail in CONTRIBUTING . The [TBD] ~~developer mailing list~~ Discussions section of the Boken Engine GitHub repository is the most appropriate place for a contributor to ask for help when making their first contribution. Decision Making Process Decisions about the future of the project are made through discussion with all members of the community, from the newest user to the most experienced PMC member. ~~All non-sensitive project management discussion takes place on the project contributors\u2019 mailing list. Occasionally, sensitive discussion occurs on a private list.~~ [TBD] In order to ensure that the project is not bogged down by endless discussion and continual voting, the project operates a policy of lazy consensus. This allows the majority of decisions to be made without resorting to a formal vote. Lazy consensus Decision making typically involves the following steps: Proposal Discussion Vote (if consensus is not reached through discussion) Decision Any community member can make a proposal for consideration by the community. In order to initiate a discussion about a new idea, they should [TBD] ~~send an email to the project contributors\u2019 list~~ start a discussion on the Boken Engine GitHub repository or submit a patch implementing the idea to the issue tracker. This will prompt a review and, if necessary, a discussion of the idea. The goal of this review and discussion is to gain approval for the contribution. Since most people in the project community have a shared vision, there is often little need for discussion in order to reach consensus. In general, as long as nobody explicitly opposes a proposal or patch, it is recognised as having the support of the community. This is called lazy consensus - that is, those who have not stated their opinion explicitly have implicitly agreed to the implementation of the proposal. Lazy consensus is a very important concept within the project. It is this process that allows a large group of people to efficiently reach consensus, as someone with no objections to a proposal need not spend time stating their position, and others need not spend time reading such mails. For lazy consensus to be effective, it is necessary to allow at least [TBD] 72 hours before assuming that there are no objections to the proposal. This requirement ensures that everyone is given enough time to read, digest and respond to the proposal. This time period is chosen so as to be as inclusive as possible of all participants, regardless of their location and time commitments. Voting Not all decisions can be made using lazy consensus. Issues such as those affecting the strategic direction or legal standing of the project must gain explicit approval in the form of a vote. Every member of the community is encouraged to express their opinions in all discussion and all votes. However, only project committers and/or PMC members (as defined above) have binding votes for the purposes of decision making. The following is a more detailed description of how voting is conducted in projects following the practice established within the Apache Software Foundation. [TBD] If a formal vote on a proposal is called (signaled simply by sending a email with \u2018[VOTE]\u2019 in the subject line), all participants on the project contributors\u2019 list may express an opinion and vote. They do this by sending an email in reply to the original \u2018[VOTE]\u2019 email, with the following vote and information: +1 \u2018yes\u2019, \u2018agree\u2019: also willing to help bring about the proposed action +0 \u2018yes\u2019, \u2018agree\u2019: not willing or able to help bring about the proposed action -0 \u2018no\u2019, \u2018disagree\u2019: but will not oppose the action\u2019s going forward -1 \u2018no\u2019, \u2018disagree\u2019: opposes the action\u2019s going forward and must propose an alternative action to address the issue (or a justification for not addressing the issue) To abstain from the vote, participants simply do not respond ~~to the email~~. However, it can be more helpful to cast a \u2018+0\u2019 or \u2018-0\u2019 than to abstain, since this allows the team to gauge the general feeling of the community if the proposal should be controversial. Every member of the community, from interested user to the most active developer, has a vote. The project encourages all members to express their opinions in all discussion and all votes. However, only some members have binding votes for the purposes of decision making; for example in the Apache Software Foundation these are the committers and/or the members of the Project Management Committee. It is therefore their responsibility to ensure that the opinions of all community members are considered. While not all members may have a binding vote, a well-justified \u2018-1\u2019 from a non-committer must be considered by the community, and if appropriate, supported by a binding \u2018-1\u2019. A \u2018-1\u2019 can also indicate a veto, depending on the type of vote and who is using it. Someone without a binding vote cannot veto a proposal, so in their case a -1 would simply indicate an objection. When a [VOTE] receives a \u2018-1\u2019, it is the responsibility of the community as a whole to address the objection. Such discussion will continue until the objection is either rescinded, overruled (in the case of a non-binding veto) or the proposal itself is altered in order to achieve consensus (possibly by withdrawing it altogether). In the rare circumstance that consensus cannot be achieved, the PMC will decide the forward course of action. In summary: - Those who don\u2019t agree with the proposal and think they have a better idea should vote -1 and defend their counter-proposal. - Those who don\u2019t agree but don\u2019t have a better idea should vote -0. - Those who agree but will not actively assist in implementing the proposal should vote +0. - Those who agree and will actively assist in implementing the proposal should vote +1. Types Of Approval Different actions require different types of approval, ranging from lazy consensus to a majority decision by the PMC. These are summarised in the table below. The section after the table describes which type of approval should be used in common situations. [TBD] Type Description Duration Lazy consensus An action with lazy consensus is implicitly allowed, unless a binding -1 vote is received. Depending on the type of action, a vote will then be called. Note that even though a binding -1 is required to prevent the action, all community members are encouraged to cast a -1 vote with supporting argument. Committers are expected to evaluate the argument and, if necessary, support it with a binding -1. N/A Lazy majority A lazy majority vote requires more binding +1 votes than binding -1 votes. [TBD] ~~72~~ hours Consensus approval Consensus approval requires three binding +1 votes and no binding -1 votes. [TBD] ~~72~~ hours Unanimous consensus All of the binding votes that are cast are to be +1 and there can be no binding vetoes (-1). [TBD] ~~120~~ hours 2/3 majority Some strategic actions require a 2/3 majority of PMC members; in addition, 2/3 of the binding votes cast must be +1. Such actions typically affect the foundation of the project (e.g. adopting a new codebase to replace an existing product). [TBD] ~~120~~ hours When Is A Vote Required? Every effort is made to allow the majority of decisions to be taken through lazy consensus. That is, simply stating one\u2019s intentions is assumed to be enough to proceed, unless an objection is raised. However, some activities require a more formal approval process in order to ensure fully transparent decision making. The table below describes some of the actions that will require a vote. It also identifies which type of vote should be called. Action Description Approval type Release plan Defines the timetable and actions for a release. A release plan cannot be vetoed (hence lazy majority). Lazy majority Product release When a release of one of the project\u2019s products is ready, a vote is required to accept the release as an official release of the project. A release cannot be vetoed (hence lazy majority). Lazy majority New committer A new committer has been proposed. Consensus approval of the PMC New PMC member A new PMC member has been proposed. Consensus approval of the community Committer removal When removal of commit privileges is sought. Unanimous consensus of the PMC PMC member removal When removal of PMC membership is sought. Unanimous consensus of the community","title":"Governance"},{"location":"sample_conclusions/proposal_governance_liberal/#governance","text":"","title":"Governance"},{"location":"sample_conclusions/proposal_governance_liberal/#overview","text":"This is an open, consensus-based community project. Anyone with an interest in the project can join the community, contribute to the project design and participate in the decision making process. This document describes how that participation takes place and how to set about earning merit within the project community.","title":"Overview"},{"location":"sample_conclusions/proposal_governance_liberal/#roles-and-responsibilities","text":"","title":"Roles And Responsibilities"},{"location":"sample_conclusions/proposal_governance_liberal/#users","text":"Users are community members who have a need for the project. They are the most important members of the community and without them the project would have no purpose. Anyone can be a user; there are no special requirements. The project asks its users to participate in the project and community as much as possible. User contributions enable the project team to ensure that they are satisfying the needs of those users.","title":"Users"},{"location":"sample_conclusions/proposal_governance_liberal/#users-tasks","text":"Common user contributions include (but are not limited to): evangelising about the project (e.g. a link on a website and word-of-mouth awareness raising) informing developers of strengths and weaknesses from a new user perspective providing moral support (a 'thank you' goes a long way) providing financial support (the software is open source, but its developers need to eat) Users who continue to engage with the project and its community will often become more and more involved. Such users may find themselves becoming contributors, as described in the next section.","title":"User's Tasks"},{"location":"sample_conclusions/proposal_governance_liberal/#contributors","text":"Contributors are community members who contribute in concrete ways to the project. Anyone can become a contributor, and contributions can take many forms. There is no expectation of commitment to the project, no specific skill requirements and no selection process.","title":"Contributors"},{"location":"sample_conclusions/proposal_governance_liberal/#contributors-tasks","text":"In addition to their actions as users, contributors may also find themselves doing one or more of the following: supporting new users (existing users are often the best people to support new users) reporting bugs identifying requirements providing graphics and web design programming assisting with project infrastructure writing documentation fixing bugs adding features Contributors engage with the project through the issue tracker on GitHub [TBD] ~~and mailing list~~, creating or commenting on an issue or pull request, or by writing or editing documentation. They submit changes to the project itself via pull requests, which will be considered for inclusion in the project by existing committers (see next section). [TBD] ~~The developer mailing list is the most appropriate place to ask for help when making that first contribution.~~ As contributors gain experience and familiarity with the project, their profile within, and commitment to, the community will increase. At some stage, they may find themselves being nominated for committership.","title":"Contributors' Tasks"},{"location":"sample_conclusions/proposal_governance_liberal/#committers","text":"Committers are community members who have shown that they are committed to the continued development of the project through ongoing engagement with the community. Committership allows contributors to more easily carry on with their project related activities by giving them direct access to the project\u2019s resources (e.g. write access to the repository). That is, they can make changes directly to project outputs, without having to submit changes via patches. This does not mean that a committer is free to do what they want. In fact, committers have no more authority over the project than contributors. While committership indicates a valued member of the community who has demonstrated a healthy respect for the project\u2019s aims and objectives, their work continues to be reviewed by the community before acceptance in an official release. The key difference between a committer and a contributor is when this approval is sought from the community. A committer seeks approval after the contribution is made, rather than before. Seeking approval after making a contribution is known as a commit-then-review process. It is more efficient to allow trusted people to make direct contributions, as the majority of those contributions will be accepted by the project. The project employs various communication mechanisms to ensure that all contributions are reviewed by the community as a whole. By the time a contributor is invited to become a committer, they will have become familiar with the project\u2019s various tools as a user and then as a contributor. Anyone can become a committer; there are no special requirements, other than to have shown a willingness and ability to participate in the project as a team player. Typically, a potential committer will need to show that they have an understanding of the project, its objectives and its strategy. They will also have provided valuable contributions to the project over a period of time.","title":"Committers"},{"location":"sample_conclusions/proposal_governance_liberal/#how-to-become-a-commiter","text":"New committers can be nominated by any existing committer. Once they have been nominated, there will be a vote by the project management committee (PMC; see below). [TBD] ~~Committer voting is one of the few activities that takes place on the project\u2019s private management list~~. This is to allow PMC members to freely express their opinions about a nominee without causing embarrassment. Once the vote has been held, the aggregated voting results are published [TBD] ~~on the public mailing list~~. The nominee is entitled to request an explanation of any \u2018no\u2019 votes against them, regardless of the outcome of the vote. This explanation will be provided by the PMC Chair (see below) and will be anonymous and constructive in nature. Nominees may decline their appointment as a committer. However, this is unusual, as the project does not expect any specific time or resource commitment from its community members. The intention behind the role of committer is to allow people to contribute to the project more easily, not to tie them in to the project in any formal way. It is important to recognise that commitership is a privilege, not a right. That privilege must be earned and once earned it can be removed by the PMC (see next section) in extreme circumstances. However, under normal circumstances committership exists for as long as the committer wishes to continue engaging with the project. A committer who shows an above-average level of contribution to the project, particularly with respect to its strategic direction and long-term health, may be nominated to become a member of the PMC. This role is described below.","title":"How to become a commiter"},{"location":"sample_conclusions/proposal_governance_liberal/#project-management-committee","text":"The project management committee consists of those individuals identified as \u2018project owners\u2019 on the development site. The PMC has additional responsibilities over and above those of a committer. These responsibilities ensure the smooth running of the project. PMC members are expected to review code contributions, participate in strategic planning, approve changes to the governance model and manage the copyrights within the project outputs. Members of the PMC do not have significant authority over other members of the community, although it is the PMC that votes on new committers. It also makes decisions when community consensus cannot be reached. [TBD] ~~In addition, the PMC has access to the project\u2019s private mailing list and its archives. This list is used for sensitive issues, such as votes for new committers and legal matters that cannot be discussed in public. It is never used for project management or planning.~~ Membership of the PMC is by invitation from the existing PMC members. A nomination will result in discussion and then a vote by the existing PMC members. PMC membership votes are subject to consensus approval of the current PMC members.","title":"Project management committee"},{"location":"sample_conclusions/proposal_governance_liberal/#support","text":"All participants in the community are encouraged to provide support for new users within the project management infrastructure. This support is provided as a way of growing the community. Those seeking support should recognise that all support activity within the project is voluntary and is therefore provided as and when time allows. A user requiring guaranteed response times or results should therefore seek to purchase a support contract from a community member. However, for those willing to engage with the project on its own terms, and willing to help support other users, the community support channels are ideal.","title":"Support"},{"location":"sample_conclusions/proposal_governance_liberal/#contribution-process","text":"Anyone can contribute to the project, regardless of their skills, as there are many ways to contribute. For instance, a contributor might be active on the [TBD] ~~project mailing list and~~ issue tracker, or might supply patches. The various ways of contributing are described in more detail in CONTRIBUTING . The [TBD] ~~developer mailing list~~ Discussions section of the Boken Engine GitHub repository is the most appropriate place for a contributor to ask for help when making their first contribution.","title":"Contribution Process"},{"location":"sample_conclusions/proposal_governance_liberal/#decision-making-process","text":"Decisions about the future of the project are made through discussion with all members of the community, from the newest user to the most experienced PMC member. ~~All non-sensitive project management discussion takes place on the project contributors\u2019 mailing list. Occasionally, sensitive discussion occurs on a private list.~~ [TBD] In order to ensure that the project is not bogged down by endless discussion and continual voting, the project operates a policy of lazy consensus. This allows the majority of decisions to be made without resorting to a formal vote.","title":"Decision Making Process"},{"location":"sample_conclusions/proposal_governance_liberal/#lazy-consensus","text":"Decision making typically involves the following steps: Proposal Discussion Vote (if consensus is not reached through discussion) Decision Any community member can make a proposal for consideration by the community. In order to initiate a discussion about a new idea, they should [TBD] ~~send an email to the project contributors\u2019 list~~ start a discussion on the Boken Engine GitHub repository or submit a patch implementing the idea to the issue tracker. This will prompt a review and, if necessary, a discussion of the idea. The goal of this review and discussion is to gain approval for the contribution. Since most people in the project community have a shared vision, there is often little need for discussion in order to reach consensus. In general, as long as nobody explicitly opposes a proposal or patch, it is recognised as having the support of the community. This is called lazy consensus - that is, those who have not stated their opinion explicitly have implicitly agreed to the implementation of the proposal. Lazy consensus is a very important concept within the project. It is this process that allows a large group of people to efficiently reach consensus, as someone with no objections to a proposal need not spend time stating their position, and others need not spend time reading such mails. For lazy consensus to be effective, it is necessary to allow at least [TBD] 72 hours before assuming that there are no objections to the proposal. This requirement ensures that everyone is given enough time to read, digest and respond to the proposal. This time period is chosen so as to be as inclusive as possible of all participants, regardless of their location and time commitments.","title":"Lazy consensus"},{"location":"sample_conclusions/proposal_governance_liberal/#voting","text":"Not all decisions can be made using lazy consensus. Issues such as those affecting the strategic direction or legal standing of the project must gain explicit approval in the form of a vote. Every member of the community is encouraged to express their opinions in all discussion and all votes. However, only project committers and/or PMC members (as defined above) have binding votes for the purposes of decision making. The following is a more detailed description of how voting is conducted in projects following the practice established within the Apache Software Foundation. [TBD] If a formal vote on a proposal is called (signaled simply by sending a email with \u2018[VOTE]\u2019 in the subject line), all participants on the project contributors\u2019 list may express an opinion and vote. They do this by sending an email in reply to the original \u2018[VOTE]\u2019 email, with the following vote and information: +1 \u2018yes\u2019, \u2018agree\u2019: also willing to help bring about the proposed action +0 \u2018yes\u2019, \u2018agree\u2019: not willing or able to help bring about the proposed action -0 \u2018no\u2019, \u2018disagree\u2019: but will not oppose the action\u2019s going forward -1 \u2018no\u2019, \u2018disagree\u2019: opposes the action\u2019s going forward and must propose an alternative action to address the issue (or a justification for not addressing the issue) To abstain from the vote, participants simply do not respond ~~to the email~~. However, it can be more helpful to cast a \u2018+0\u2019 or \u2018-0\u2019 than to abstain, since this allows the team to gauge the general feeling of the community if the proposal should be controversial. Every member of the community, from interested user to the most active developer, has a vote. The project encourages all members to express their opinions in all discussion and all votes. However, only some members have binding votes for the purposes of decision making; for example in the Apache Software Foundation these are the committers and/or the members of the Project Management Committee. It is therefore their responsibility to ensure that the opinions of all community members are considered. While not all members may have a binding vote, a well-justified \u2018-1\u2019 from a non-committer must be considered by the community, and if appropriate, supported by a binding \u2018-1\u2019. A \u2018-1\u2019 can also indicate a veto, depending on the type of vote and who is using it. Someone without a binding vote cannot veto a proposal, so in their case a -1 would simply indicate an objection. When a [VOTE] receives a \u2018-1\u2019, it is the responsibility of the community as a whole to address the objection. Such discussion will continue until the objection is either rescinded, overruled (in the case of a non-binding veto) or the proposal itself is altered in order to achieve consensus (possibly by withdrawing it altogether). In the rare circumstance that consensus cannot be achieved, the PMC will decide the forward course of action. In summary: - Those who don\u2019t agree with the proposal and think they have a better idea should vote -1 and defend their counter-proposal. - Those who don\u2019t agree but don\u2019t have a better idea should vote -0. - Those who agree but will not actively assist in implementing the proposal should vote +0. - Those who agree and will actively assist in implementing the proposal should vote +1.","title":"Voting"},{"location":"sample_conclusions/proposal_governance_liberal/#types-of-approval","text":"Different actions require different types of approval, ranging from lazy consensus to a majority decision by the PMC. These are summarised in the table below. The section after the table describes which type of approval should be used in common situations. [TBD] Type Description Duration Lazy consensus An action with lazy consensus is implicitly allowed, unless a binding -1 vote is received. Depending on the type of action, a vote will then be called. Note that even though a binding -1 is required to prevent the action, all community members are encouraged to cast a -1 vote with supporting argument. Committers are expected to evaluate the argument and, if necessary, support it with a binding -1. N/A Lazy majority A lazy majority vote requires more binding +1 votes than binding -1 votes. [TBD] ~~72~~ hours Consensus approval Consensus approval requires three binding +1 votes and no binding -1 votes. [TBD] ~~72~~ hours Unanimous consensus All of the binding votes that are cast are to be +1 and there can be no binding vetoes (-1). [TBD] ~~120~~ hours 2/3 majority Some strategic actions require a 2/3 majority of PMC members; in addition, 2/3 of the binding votes cast must be +1. Such actions typically affect the foundation of the project (e.g. adopting a new codebase to replace an existing product). [TBD] ~~120~~ hours","title":"Types Of Approval"},{"location":"sample_conclusions/proposal_governance_liberal/#when-is-a-vote-required","text":"Every effort is made to allow the majority of decisions to be taken through lazy consensus. That is, simply stating one\u2019s intentions is assumed to be enough to proceed, unless an objection is raised. However, some activities require a more formal approval process in order to ensure fully transparent decision making. The table below describes some of the actions that will require a vote. It also identifies which type of vote should be called. Action Description Approval type Release plan Defines the timetable and actions for a release. A release plan cannot be vetoed (hence lazy majority). Lazy majority Product release When a release of one of the project\u2019s products is ready, a vote is required to accept the release as an official release of the project. A release cannot be vetoed (hence lazy majority). Lazy majority New committer A new committer has been proposed. Consensus approval of the PMC New PMC member A new PMC member has been proposed. Consensus approval of the community Committer removal When removal of commit privileges is sought. Unanimous consensus of the PMC PMC member removal When removal of PMC membership is sought. Unanimous consensus of the community","title":"When Is A Vote Required?"},{"location":"sample_conclusions/use-cases-and-communities/","text":"1.2.1 Stakeholder Communities around the Open-Source Project The stakeholder communities that will naturally evolve around the Open-Source Project belong essentially to these three broad groups: - Contributors - User Creators - End-users or end-product consumers Contributors The contributors can be divided into the following subgroups: Contributors of funds Contributors of time, expertise, and feedback Open-Source Community Core Team (HYVE) External Designers External Developers External \u2013 Non-Developers such as users, translators, etc. User Creators - Feedback End-Users or End-Consumers - Feedback Contributors of Funds Are the companies that will be interested to support financially the Open-Source Project. Contributors of Time, Expertise and Feedback The contributors of time, expertise and feedback will be those who will actively contribute grow, develop, and improve the project\u2019s software. User Creators Are the users who will actively use the open-source software from the project to create content for end users. End-Users or End-consumers They are the users and consumers of the content created with our project\u2019s software by the User Creators.`` Motivations of Contributors in Open-Source Software Projects The motivations to contribute to Open Source (OSS) Software projects are quite different and are the following as portrayed in the paper \u201cCarrots and Rainbows: Motivation and Social Practice in OSS Development\u201d by von Krogh, et. Al, 2012. Such motivations can be group into the following main categories: 1. Intrinsic motivations (performed for the inherent joy of participating and contributing) a. Ideology: The believe and commitment to the purpose and nature of OSS: free to modify, etc. b. Altruism: A voluntary contribution that does good, is an end in itself and is not directed at gain. c. Kinship amity: Urge of people to help others in a community that they belong to. d. Enjoyment and fun: The playfulness and experimentation possibilities when contributing. 2. Internalized Extrinsic Motivation (performed with an external result or purpose linked in a way to the project) a. Reputation: Refers to the reputation that is obtained through contributions made to a project that can be divided into peer reputation (within the community) and outside reputation (friends, relatives, and prestige awarded). b. Gift Economy/Reciprocity: Giving code in return for other code. c. Learning: The motive to improve or acquire new skills through OSS. d. Own \u2013 Use Value: When the OSS has direct user value for the contributors. 3. Extrinsic (performed with a separable outcome not linked to the project) a. Career: When they want to signal their talent for all to see and inspect in hopes for new job opportunities. b. Pay: Up to 40% of contributors is paid to contribute to OSS projects in some studies. According to \u201cShifting Sands of Motivation: Revisiting What drives Contributors in Open Source\u201d by Gerosa, et al. (2021) the most prevalent motivators to contribute to OSS are: The most frequent reason to contribute being Learning, Fun, Altruism and Kinship. However, these authors made a point in their study that these shifted depending both on the demographics as well as the experience with OSS projects. Early-Stage and Late-Stage Motivators According to the \u201cShifting Sands of Motivation: Revisiting What drives Contributors in Open Source\u201d by Gerosa, et al. (2021), motivations differ depending on your profile, demographics, your experience, and your interest will shift over time. One of the reasons can be attached to the fact that today OSS enjoys a place of distinction in producing key technologies, bringing new learning and career opportunities to contributors but also OSS projects. Companies look at OSS project to find new talent. According to the authors there are considerable differences between novice contributors with few years contributing to OSS and the more experienced contributors whose motivation shifted from some motivators to others, specifically extrinsic motivators shifting to intrinsic. Novice OSS contributors for example were much likelier to join an OSS projects for learning purposes, fun, reputation, and career. More experienced OSS contributors though clearly displayed greater motivation for social and altruistic reasons as well as their ideology which were motivators for them to continue adding to OSS projects. 1.2.2 Core Team\u2019s Scope of Influence At the beginning our core team\u2019s reach will be that of the different communities of contributors, as well as that of the User Creators who will actively use the software to develop their ideas and create content. We will have no control over the content that is created with our software and hence will focus our attention on catering to the Contributor group and that of the User Creators. Therefore, as mentioned in our basic best practices research, we will have to focus on specific points to lower the Contributor and User Creator entry barriers to our project and take into consideration the different motivations of these groups for contributing to or using our project\u2019s software. Further questions to explore will be the elements for intrinsic and extrinsic motivations that make people contribute to an open-source project as well as the benefits that they derive from this. Current State of the Software Framework The current software can be described in one sentence as: \u201cFramework to create non-linear, slide-driven visual stories for IOS.\u201d The current features can be summed up as the following: 1. Story contents described by a comprehensible JSON file. 2. Decoupled architecture: no mess with code required. 3. Extensible and customizable for advanced users. 4. No configuration or customization needed: just the story contents and its assets are enough to create the app. 5. Create your content with text areas, images, and rectangular shapes. 6. Contents auto adjusted to device screen size. 7. Background and scene-specific audio support. 8. Gestures (swipes) support 9. Landscape mode ready. The current user creator would have to download, install, and create content with it resulting in an independent app that would then have to be sent in, to the Apple Store for approval and listing. User Creator Entry and Usage Barrier At the current state of the software the User Creators profile requires a higher-than-average computer knowledge to install and run the software to create content apps with it. In addition, it does not allow to pre customize such settings or create templates without technical knowledge thus it can result a repetitive task, each time new content is to be created. User Creators Listing Barriers Even though unrelated to our software it is a reality that we have experienced ourselves and an area we will have to explore more once we design our demo project. It is a fact that if one\u2019s app does not meet the Apple Store\u2019s minimum requirements of content value for to end-users, the app will not get listed no matter how good and safe it is technically, so that we will have to learn ourselves from this exercise and then document it too for the community to help them achieve the goal of getting their application listed. 1.2.3 Creation of Value for the User Creators vs Creation of Value for End-Users The value that each type of user derives from our software are different since each group has different goals and objectives when using it. User Creators Value If we look at the User Creators, we first need to address the following questions to better understand this stakeholder. Some questions to ask when looking at the User Creators: - \u2022 What creates value for the User Creators? - \u2022 Which needs does he/she have? - \u2022 What problems does he normally face? - \u2022 What would drive them to use our framework? - \u2022 Which are the features that our product would need to include to become even more attractive? End User Value The value that is generated for the End Users is to a great extent tied to the content of any applications that will be created with the help of our software. Given this, we must differentiate between what we can affect and what we cannot affect. The content for example will be dependent on the ideas of each of our User Creators. Things that we can affect and control to some extent are: - \u2022 Simple to use user interface. - \u2022 User customization options. - \u2022 Range of possible features that are available for the use of the application. Potential Use Cases of the Project\u2019s Software We did different thought exercises both individually as well as groups to come up with a list of potential use cases for the software asking the following questions: 1. A. What are obvious possible use cases at the current state of the software? 2. B. What are the possible use cases with a few additional features to create everyday usage and value? 3. C. What app would we create to provide daily direct value for someone like us? Hereafter we consider these use cases from a different perspective of value creation and went through a set of questions to establish the most feasible. - \u2022 Are there currently better options for the same purpose? - \u2022 Would we use it as creators? - \u2022 Would we use it as end users? - \u2022 What benefit would we derive from it? - \u2022 Would it be difficult to be used? - \u2022 Do the current features justify it to be a native app rather than a website? If not, which features are needed? Exercise A: What are the possible use cases at the current state of the software? The initial brainstorming\u2019s use cases resulted in the following list: ![03_Use_Case_Brainstorming_01](images/03_Use_Case_Brainstorming_01.png) As of right now from going over this list one can infer that many of the possible use cases are already served by other existing non app related technologies, such as PDF or websites. The creation of catalogues, maintenance instructions do not take advantage of the nonlinear nor sound features of our product. Which would leave the following initial use case list as the likelier ones making use of most of the current features and with a potential frequent to high usage and interaction. ![04_Use_Case_Brainstorming_02](images/04_Use_Case_Brainstorming_02.PNG) Exercise B: What are the possible use cases with a few additional features to create everyday usage and value? Some additional features that could drive additional value and increase usage rate would be for example: - \u2022 Notifications: Updates of new content availability for download, reminders for study, etc. - \u2022 Marking pages to easily go back to them: Quickly and easily go back to a location or save the content for later review. - \u2022 Uploading new content in the app: Possibility to expand the content easily without having to install a new app. - \u2022 Menu & Index: Better overview of available content, trial content, marked pages, etc. - \u2022 Possibility to buy additional content through the app: Content from the same app author. These additional features also expand the use case possibilities for our software. Questions resulting from these possible features are: - \u2022 Can they easily be implemented? - \u2022 Which will provide the highest return through the least effort? Exercise C: What app would we create to provide daily direct value for someone like us using this software or slightly amplifying it? Keeping in mind the following questions we proceeded to consider a slightly broader range of application use cases: - \u2022 What could we create that could generate daily value for the end-user with this software? - \u2022 What generates value for the User Creator? - \u2022 What generates value for the User Creator or content creator? - \u2022 Are there currently better options for the same purpose? - \u2022 Would we use it as creators? - \u2022 Would we use it as end users? - \u2022 What benefit would we derive from it? - \u2022 Would it be difficult to be used? - \u2022 What other apps exist that do something similar? - \u2022 Do the current features justify it to be a native app rather than a website? If not, which features are needed? Value increase for User Creators (Content Creators) - \u2022 A UI for visually editing, or at least aiding, on the creation of the content description JSON would add significant value to the application, as it would reduce the errors when editing it and would speed up the content creation, as the creator would not have to \u201ctry\u201d position and scale values. Although this is a feature aimed directly to the content creator, I would generate also indirect benefit to the end-user, as it would increase the repository of available applications. - \u2022 Additionally, an automation system to completely create the final App with no need for writing code would increase the value of the App. Combined with the previously commented content creation UI, would offer the user a fully visual app creation from end to end. This system would imply automatic code generation and building in a back-end using the XCode commands, increasing the engine complexity. - \u2022 Also, additional elements would be very useful for both content creators and end-user to increase the appeal of the final applications. Some examples would be video elements, animated GIFs or standard symbols. Also, increasing the possibilities of currently supported elements would be very interesting (i.e. Selecting font families or adjusting image lightness) **Would we use it as creators?** - \u2022 A trained developer would not a visual interface, since for him it would be easier to create the final content using directly the XCode features. **Would we use it as end user?** - \u2022 If the created content is interesting enough, of course. It depends completely on the content. **Are there currently better options for the same purpose? What other apps exist that do something similar?** - \u2022 There are plenty of similar Apps with an integrated UI, like this, this or this. The main difference is that Boken Engine is a source code framework (not a standalone application) that is integrated in a host application, and therefore can be a part of a broader project. However, there are other libraries for a similar purpose, like the extremely popular Ren\u2019Py. **What benefit would we derive from it?** - \u2022 The main interest a developer could have to use it, instead of using easier alternatives, is that, as stated previously, this can be integrated in a huge application, and as it has a decoupled and open architecture, can be mixed up with other libraries and frameworks to achieve a more powerful visual narrative application than use it individually. For example a developer can use only a part of it (i.e. only the SceneManager and StoryParser, but construct the slides themselves with another engine) or combine some of its features with the features of other libraries, or extend/modify it depending on his/her necessities. **Do the current features justify it to be a native app rather than a website?** - \u2022 The current features don\u2019t justify being a native app, but future developments could add some features very difficult to achieve via website (even PWAs). 1.2.4 Personas within Our Scope of Influence Taking into consideration the different use cases and the current state of the software we tried to create a simplified overview of the four potential personas. Three current and one potential future user if the app were completely upgraded. At this point in time we perceive developers to be the main objective users as well as contributors until the project gains traction. In addition to this we also created the other extreme of the potential user in the future of a finished app made for Visual User Stories to get a first insight into the requirements that may have to be met and developed in the future and which need to be included in a road map. Potential user of the current software ![IOS_Open_Source-Persona-User_Creator-Developer](images/IOS_Open_Source-Persona-User_Creator-Developer.jpg) ![IOS_Open_Source-Persona-Contributor-Developer_Junior](images/IOS_Open_Source-Persona-Contributor-Developer_Junior.jpg) ![IOS_Open_Source_-_Persona_-_Contributor_-_Developer_Senior](images/IOS_Open_Source-Persona-Contributor-Developer_Senior.jpg) Potential contributors to the project at this stage ![IOS_Open_Source-Persona-User_Creator-Non_Developer-Visual_Story_Teller](images/IOS_Open_Source-Persona-User_Creator-Non_Developer-Visual_Story_Teller.jpg) 1.2.5 Opportunity Canvas **Current state of the Software** ![IOS_Open_Source-Opportunity_Canvas-Framework_for_Developers](images/IOS_Open_Source-Opportunity_Canvas-Framework_for_Developers.jpg) **Potential future state of the software** ![IOS_Open_Source-Opportunity_Canvas-Full_auto_install_package_program_with_a_UI_for_non_developers](images/IOS_Open_Source-Opportunity_Canvas-Full_auto_install_package_program_with_a_UI_for_non_developers.jpg)","title":"Use cases and communities"},{"location":"templates_licenses/agpl-3.0/","text":"GNU AFFERO GENERAL PUBLIC LICENSE Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/ Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. Preamble The GNU Affero General Public License is a free, copyleft license for software and other kinds of works, specifically designed to ensure cooperation with the community in the case of network server software. The licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, our General Public Licenses are intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users. When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things. Developers that use our General Public Licenses protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License which gives you legal permission to copy, distribute and/or modify the software. A secondary benefit of defending all users' freedom is that improvements made in alternate versions of the program, if they receive widespread use, become available for other developers to incorporate. Many developers of free software are heartened and encouraged by the resulting cooperation. However, in the case of software used on network servers, this result may fail to come about. The GNU General Public License permits making a modified version and letting the public access it on a server without ever releasing its source code to the public. The GNU Affero General Public License is designed specifically to ensure that, in such cases, the modified source code becomes available to the community. It requires the operator of a network server to provide the source code of the modified version running there to the users of that server. Therefore, public use of a modified version, on a publicly accessible server, gives the public access to the source code of the modified version. An older license, called the Affero General Public License and published by Affero, was designed to accomplish similar goals. This is a different license, not a version of the Affero GPL, but Affero has released a new version of the Affero GPL which permits relicensing under this license. The precise terms and conditions for copying, distribution and modification follow. TERMS AND CONDITIONS 0. Definitions \"This License\" refers to version 3 of the GNU Affero General Public License. \"Copyright\" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks. \"The Program\" refers to any copyrightable work licensed under this License. Each licensee is addressed as \"you\". \"Licensees\" and \"recipients\" may be individuals or organizations. To \"modify\" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a \"modified version\" of the earlier work or a work \"based on\" the earlier work. A \"covered work\" means either the unmodified Program or a work based on the Program. To \"propagate\" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy. Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well. To \"convey\" a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying. An interactive user interface displays \"Appropriate Legal Notices\" to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License. If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion. 1. Source Code The \"source code\" for a work means the preferred form of the work for making modifications to it. \"Object code\" means any non-source form of a work. A \"Standard Interface\" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language. The \"System Libraries\" of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form. A \"Major Component\", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it. The \"Corresponding Source\" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities. However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work. For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work. The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source. The Corresponding Source for a work in source code form is that same work. 2. Basic Permissions All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work. This License acknowledges your rights of fair use or other equivalent, as provided by copyright law. You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force. You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright. Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you. Conveying under any other circumstances is permitted solely under the conditions stated below. Sublicensing is not allowed; section 10 makes it unnecessary. 3. Protecting Users' Legal Rights From Anti-Circumvention Law No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures. When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures. 4. Conveying Verbatim Copies You may convey verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program. You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee. 5. Conveying Modified Source Versions You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions: a) The work must carry prominent notices stating that you modified it, and giving a relevant date. b) The work must carry prominent notices stating that it is released under this License and any conditions added under section 7. This requirement modifies the requirement in section 4 to \"keep intact all notices\". c) You must license the entire work, as a whole, under this License to anyone who comes into possession of a copy. This License will therefore apply, along with any applicable section 7 additional terms, to the whole of the work, and all its parts, regardless of how they are packaged. This License gives no permission to license the work in any other way, but it does not invalidate such permission if you have separately received it. d) If the work has interactive user interfaces, each must display Appropriate Legal Notices; however, if the Program has interactive interfaces that do not display Appropriate Legal Notices, your work need not make them do so. A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an \"aggregate\" if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit. Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate. 6. Conveying Non-Source Forms You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways: a) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by the Corresponding Source fixed on a durable physical medium customarily used for software interchange. b) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by a written offer, valid for at least three years and valid for as long as you offer spare parts or customer support for that product model, to give anyone who possesses the object code either (1) a copy of the Corresponding Source for all the software in the product that is covered by this License, on a durable physical medium customarily used for software interchange, for a price no more than your reasonable cost of physically performing this conveying of source, or (2) access to copy the Corresponding Source from a network server at no charge. c) Convey individual copies of the object code with a copy of the written offer to provide the Corresponding Source. This alternative is allowed only occasionally and noncommercially, and only if you received the object code with such an offer, in accord with subsection 6b. d) Convey the object code by offering access from a designated place (gratis or for a charge), and offer equivalent access to the Corresponding Source in the same way through the same place at no further charge. You need not require recipients to copy the Corresponding Source along with the object code. If the place to copy the object code is a network server, the Corresponding Source may be on a different server (operated by you or a third party) that supports equivalent copying facilities, provided you maintain clear directions next to the object code saying where to find the Corresponding Source. Regardless of what server hosts the Corresponding Source, you remain obligated to ensure that it is available for as long as needed to satisfy these requirements. e) Convey the object code using peer-to-peer transmission, provided you inform other peers where the object code and Corresponding Source of the work are being offered to the general public at no charge under subsection 6d. A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work. A \"User Product\" is either (1) a \"consumer product\", which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling. In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage. For a particular product received by a particular user, \"normally used\" refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product. A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product. \"Installation Information\" for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source. The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made. If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information. But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM). The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed. Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network. Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying. 7. Additional Terms \"Additional permissions\" are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law. If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions. When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it. (Additional permissions may be written to require their own removal in certain cases when you modify the work.) You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission. Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms: a) Disclaiming warranty or limiting liability differently from the terms of sections 15 and 16 of this License; or b) Requiring preservation of specified reasonable legal notices or author attributions in that material or in the Appropriate Legal Notices displayed by works containing it; or c) Prohibiting misrepresentation of the origin of that material, or requiring that modified versions of such material be marked in reasonable ways as different from the original version; or d) Limiting the use for publicity purposes of names of licensors or authors of the material; or e) Declining to grant rights under trademark law for use of some trade names, trademarks, or service marks; or f) Requiring indemnification of licensors and authors of that material by anyone who conveys the material (or modified versions of it) with contractual assumptions of liability to the recipient, for any liability that these contractual assumptions directly impose on those licensors and authors. All other non-permissive additional terms are considered \"further restrictions\" within the meaning of section 10. If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term. If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying. If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms. Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way. 8. Termination You may not propagate or modify a covered work except as expressly provided under this License. Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11). However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation. Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice. Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10. 9. Acceptance Not Required for Having Copies You are not required to accept this License in order to receive or run a copy of the Program. Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance. However, nothing other than this License grants you permission to propagate or modify any covered work. These actions infringe copyright if you do not accept this License. Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so. 10. Automatic Licensing of Downstream Recipients Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License. You are not responsible for enforcing compliance by third parties with this License. An \"entity transaction\" is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations. If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party's predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts. You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License. For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it. 11. Patents A \"contributor\" is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based. The work thus licensed is called the contributor's \"contributor version\". A contributor's \"essential patent claims\" are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version. For purposes of this definition, \"control\" includes the right to grant patent sublicenses in a manner consistent with the requirements of this License. Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version. In the following three paragraphs, a \"patent license\" is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement). To \"grant\" such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party. If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients. \"Knowingly relying\" means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient's use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid. If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it. A patent license is \"discriminatory\" if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License. You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007. Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law. 12. No Surrender of Others' Freedom If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all. For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program. 13. Remote Network Interaction; Use with the GNU General Public License Notwithstanding any other provision of this License, if you modify the Program, your modified version must prominently offer all users interacting with it remotely through a computer network (if your version supports such interaction) an opportunity to receive the Corresponding Source of your version by providing access to the Corresponding Source from a network server at no charge, through some standard or customary means of facilitating copying of software. This Corresponding Source shall include the Corresponding Source for any work covered by version 3 of the GNU General Public License that is incorporated pursuant to the following paragraph. Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU General Public License into a single combined work, and to convey the resulting work. The terms of this License will continue to apply to the part which is the covered work, but the work with which it is combined will remain governed by version 3 of the GNU General Public License. 14. Revised Versions of this License The Free Software Foundation may publish revised and/or new versions of the GNU Affero General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Program specifies that a certain numbered version of the GNU Affero General Public License \"or any later version\" applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of the GNU Affero General Public License, you may choose any version ever published by the Free Software Foundation. If the Program specifies that a proxy can decide which future versions of the GNU Affero General Public License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Program. Later license versions may give you additional or different permissions. However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version. 15. Disclaimer of Warranty THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION. 16. Limitation of Liability IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. 17. Interpretation of Sections 15 and 16 If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee. END OF TERMS AND CONDITIONS How to Apply These Terms to Your New Programs If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms. To do so, attach the following notices to the program. It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the \"copyright\" line and a pointer to where the full notice is found. <one line to give the program's name and a brief idea of what it does.> Copyright (C) <year> <name of author> This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see <https://www.gnu.org/licenses/>. Also add information on how to contact you by electronic and paper mail. If your software can interact with users remotely through a computer network, you should also make sure that it provides a way for users to get its source. For example, if your program is a web application, its interface could display a \"Source\" link that leads users to an archive of the code. There are many ways you could offer source, and different solutions will be better for different programs; see section 13 for the specific requirements. You should also get your employer (if you work as a programmer) or school, if any, to sign a \"copyright disclaimer\" for the program, if necessary. For more information on this, and how to apply and follow the GNU AGPL, see https://www.gnu.org/licenses/ .","title":"GNU AFFERO GENERAL PUBLIC LICENSE"},{"location":"templates_licenses/agpl-3.0/#gnu-affero-general-public-license","text":"Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/ Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.","title":"GNU AFFERO GENERAL PUBLIC LICENSE"},{"location":"templates_licenses/agpl-3.0/#preamble","text":"The GNU Affero General Public License is a free, copyleft license for software and other kinds of works, specifically designed to ensure cooperation with the community in the case of network server software. The licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, our General Public Licenses are intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users. When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things. Developers that use our General Public Licenses protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License which gives you legal permission to copy, distribute and/or modify the software. A secondary benefit of defending all users' freedom is that improvements made in alternate versions of the program, if they receive widespread use, become available for other developers to incorporate. Many developers of free software are heartened and encouraged by the resulting cooperation. However, in the case of software used on network servers, this result may fail to come about. The GNU General Public License permits making a modified version and letting the public access it on a server without ever releasing its source code to the public. The GNU Affero General Public License is designed specifically to ensure that, in such cases, the modified source code becomes available to the community. It requires the operator of a network server to provide the source code of the modified version running there to the users of that server. Therefore, public use of a modified version, on a publicly accessible server, gives the public access to the source code of the modified version. An older license, called the Affero General Public License and published by Affero, was designed to accomplish similar goals. This is a different license, not a version of the Affero GPL, but Affero has released a new version of the Affero GPL which permits relicensing under this license. The precise terms and conditions for copying, distribution and modification follow.","title":"Preamble"},{"location":"templates_licenses/agpl-3.0/#terms-and-conditions","text":"","title":"TERMS AND CONDITIONS"},{"location":"templates_licenses/agpl-3.0/#0-definitions","text":"\"This License\" refers to version 3 of the GNU Affero General Public License. \"Copyright\" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks. \"The Program\" refers to any copyrightable work licensed under this License. Each licensee is addressed as \"you\". \"Licensees\" and \"recipients\" may be individuals or organizations. To \"modify\" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a \"modified version\" of the earlier work or a work \"based on\" the earlier work. A \"covered work\" means either the unmodified Program or a work based on the Program. To \"propagate\" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy. Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well. To \"convey\" a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying. An interactive user interface displays \"Appropriate Legal Notices\" to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License. If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion.","title":"0. Definitions"},{"location":"templates_licenses/agpl-3.0/#1-source-code","text":"The \"source code\" for a work means the preferred form of the work for making modifications to it. \"Object code\" means any non-source form of a work. A \"Standard Interface\" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language. The \"System Libraries\" of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form. A \"Major Component\", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it. The \"Corresponding Source\" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities. However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work. For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work. The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source. The Corresponding Source for a work in source code form is that same work.","title":"1. Source Code"},{"location":"templates_licenses/agpl-3.0/#2-basic-permissions","text":"All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work. This License acknowledges your rights of fair use or other equivalent, as provided by copyright law. You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force. You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright. Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you. Conveying under any other circumstances is permitted solely under the conditions stated below. Sublicensing is not allowed; section 10 makes it unnecessary.","title":"2. Basic Permissions"},{"location":"templates_licenses/agpl-3.0/#3-protecting-users-legal-rights-from-anti-circumvention-law","text":"No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures. When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures.","title":"3. Protecting Users' Legal Rights From Anti-Circumvention Law"},{"location":"templates_licenses/agpl-3.0/#4-conveying-verbatim-copies","text":"You may convey verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program. You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee.","title":"4. Conveying Verbatim Copies"},{"location":"templates_licenses/agpl-3.0/#5-conveying-modified-source-versions","text":"You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions: a) The work must carry prominent notices stating that you modified it, and giving a relevant date. b) The work must carry prominent notices stating that it is released under this License and any conditions added under section 7. This requirement modifies the requirement in section 4 to \"keep intact all notices\". c) You must license the entire work, as a whole, under this License to anyone who comes into possession of a copy. This License will therefore apply, along with any applicable section 7 additional terms, to the whole of the work, and all its parts, regardless of how they are packaged. This License gives no permission to license the work in any other way, but it does not invalidate such permission if you have separately received it. d) If the work has interactive user interfaces, each must display Appropriate Legal Notices; however, if the Program has interactive interfaces that do not display Appropriate Legal Notices, your work need not make them do so. A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an \"aggregate\" if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit. Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.","title":"5. Conveying Modified Source Versions"},{"location":"templates_licenses/agpl-3.0/#6-conveying-non-source-forms","text":"You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways: a) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by the Corresponding Source fixed on a durable physical medium customarily used for software interchange. b) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by a written offer, valid for at least three years and valid for as long as you offer spare parts or customer support for that product model, to give anyone who possesses the object code either (1) a copy of the Corresponding Source for all the software in the product that is covered by this License, on a durable physical medium customarily used for software interchange, for a price no more than your reasonable cost of physically performing this conveying of source, or (2) access to copy the Corresponding Source from a network server at no charge. c) Convey individual copies of the object code with a copy of the written offer to provide the Corresponding Source. This alternative is allowed only occasionally and noncommercially, and only if you received the object code with such an offer, in accord with subsection 6b. d) Convey the object code by offering access from a designated place (gratis or for a charge), and offer equivalent access to the Corresponding Source in the same way through the same place at no further charge. You need not require recipients to copy the Corresponding Source along with the object code. If the place to copy the object code is a network server, the Corresponding Source may be on a different server (operated by you or a third party) that supports equivalent copying facilities, provided you maintain clear directions next to the object code saying where to find the Corresponding Source. Regardless of what server hosts the Corresponding Source, you remain obligated to ensure that it is available for as long as needed to satisfy these requirements. e) Convey the object code using peer-to-peer transmission, provided you inform other peers where the object code and Corresponding Source of the work are being offered to the general public at no charge under subsection 6d. A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work. A \"User Product\" is either (1) a \"consumer product\", which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling. In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage. For a particular product received by a particular user, \"normally used\" refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product. A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product. \"Installation Information\" for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source. The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made. If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information. But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM). The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed. Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network. Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying.","title":"6. Conveying Non-Source Forms"},{"location":"templates_licenses/agpl-3.0/#7-additional-terms","text":"\"Additional permissions\" are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law. If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions. When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it. (Additional permissions may be written to require their own removal in certain cases when you modify the work.) You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission. Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms: a) Disclaiming warranty or limiting liability differently from the terms of sections 15 and 16 of this License; or b) Requiring preservation of specified reasonable legal notices or author attributions in that material or in the Appropriate Legal Notices displayed by works containing it; or c) Prohibiting misrepresentation of the origin of that material, or requiring that modified versions of such material be marked in reasonable ways as different from the original version; or d) Limiting the use for publicity purposes of names of licensors or authors of the material; or e) Declining to grant rights under trademark law for use of some trade names, trademarks, or service marks; or f) Requiring indemnification of licensors and authors of that material by anyone who conveys the material (or modified versions of it) with contractual assumptions of liability to the recipient, for any liability that these contractual assumptions directly impose on those licensors and authors. All other non-permissive additional terms are considered \"further restrictions\" within the meaning of section 10. If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term. If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying. If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms. Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way.","title":"7. Additional Terms"},{"location":"templates_licenses/agpl-3.0/#8-termination","text":"You may not propagate or modify a covered work except as expressly provided under this License. Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11). However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation. Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice. Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10.","title":"8. Termination"},{"location":"templates_licenses/agpl-3.0/#9-acceptance-not-required-for-having-copies","text":"You are not required to accept this License in order to receive or run a copy of the Program. Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance. However, nothing other than this License grants you permission to propagate or modify any covered work. These actions infringe copyright if you do not accept this License. Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so.","title":"9. Acceptance Not Required for Having Copies"},{"location":"templates_licenses/agpl-3.0/#10-automatic-licensing-of-downstream-recipients","text":"Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License. You are not responsible for enforcing compliance by third parties with this License. An \"entity transaction\" is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations. If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party's predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts. You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License. For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it.","title":"10. Automatic Licensing of Downstream Recipients"},{"location":"templates_licenses/agpl-3.0/#11-patents","text":"A \"contributor\" is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based. The work thus licensed is called the contributor's \"contributor version\". A contributor's \"essential patent claims\" are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version. For purposes of this definition, \"control\" includes the right to grant patent sublicenses in a manner consistent with the requirements of this License. Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version. In the following three paragraphs, a \"patent license\" is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement). To \"grant\" such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party. If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients. \"Knowingly relying\" means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient's use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid. If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it. A patent license is \"discriminatory\" if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License. You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007. Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law.","title":"11. Patents"},{"location":"templates_licenses/agpl-3.0/#12-no-surrender-of-others-freedom","text":"If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all. For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program.","title":"12. No Surrender of Others' Freedom"},{"location":"templates_licenses/agpl-3.0/#13-remote-network-interaction-use-with-the-gnu-general-public-license","text":"Notwithstanding any other provision of this License, if you modify the Program, your modified version must prominently offer all users interacting with it remotely through a computer network (if your version supports such interaction) an opportunity to receive the Corresponding Source of your version by providing access to the Corresponding Source from a network server at no charge, through some standard or customary means of facilitating copying of software. This Corresponding Source shall include the Corresponding Source for any work covered by version 3 of the GNU General Public License that is incorporated pursuant to the following paragraph. Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU General Public License into a single combined work, and to convey the resulting work. The terms of this License will continue to apply to the part which is the covered work, but the work with which it is combined will remain governed by version 3 of the GNU General Public License.","title":"13. Remote Network Interaction; Use with the GNU General Public License"},{"location":"templates_licenses/agpl-3.0/#14-revised-versions-of-this-license","text":"The Free Software Foundation may publish revised and/or new versions of the GNU Affero General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Program specifies that a certain numbered version of the GNU Affero General Public License \"or any later version\" applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of the GNU Affero General Public License, you may choose any version ever published by the Free Software Foundation. If the Program specifies that a proxy can decide which future versions of the GNU Affero General Public License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Program. Later license versions may give you additional or different permissions. However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version.","title":"14. Revised Versions of this License"},{"location":"templates_licenses/agpl-3.0/#15-disclaimer-of-warranty","text":"THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.","title":"15. Disclaimer of Warranty"},{"location":"templates_licenses/agpl-3.0/#16-limitation-of-liability","text":"IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.","title":"16. Limitation of Liability"},{"location":"templates_licenses/agpl-3.0/#17-interpretation-of-sections-15-and-16","text":"If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee. END OF TERMS AND CONDITIONS","title":"17. Interpretation of Sections 15 and 16"},{"location":"templates_licenses/agpl-3.0/#how-to-apply-these-terms-to-your-new-programs","text":"If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms. To do so, attach the following notices to the program. It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the \"copyright\" line and a pointer to where the full notice is found. <one line to give the program's name and a brief idea of what it does.> Copyright (C) <year> <name of author> This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see <https://www.gnu.org/licenses/>. Also add information on how to contact you by electronic and paper mail. If your software can interact with users remotely through a computer network, you should also make sure that it provides a way for users to get its source. For example, if your program is a web application, its interface could display a \"Source\" link that leads users to an archive of the code. There are many ways you could offer source, and different solutions will be better for different programs; see section 13 for the specific requirements. You should also get your employer (if you work as a programmer) or school, if any, to sign a \"copyright disclaimer\" for the program, if necessary. For more information on this, and how to apply and follow the GNU AGPL, see https://www.gnu.org/licenses/ .","title":"How to Apply These Terms to Your New Programs"},{"location":"templates_licenses/cc-by-sa/","text":"Creative Commons Attribution-ShareAlike 4.0 International Creative Commons Corporation (\u201cCreative Commons\u201d) is not a law firm and does not provide legal services or legal advice. Distribution of Creative Commons public licenses does not create a lawyer-client or other relationship. Creative Commons makes its licenses and related information available on an \u201cas-is\u201d basis. Creative Commons gives no warranties regarding its licenses, any material licensed under their terms and conditions, or any related information. Creative Commons disclaims all liability for damages resulting from their use to the fullest extent possible. Using Creative Commons Public Licenses Creative Commons public licenses provide a standard set of terms and conditions that creators and other rights holders may use to share original works of authorship and other material subject to copyright and certain other rights specified in the public license below. The following considerations are for informational purposes only, are not exhaustive, and do not form part of our licenses. Considerations for licensors: Our public licenses are intended for use by those authorized to give the public permission to use material in ways otherwise restricted by copyright and certain other rights. Our licenses are irrevocable. Licensors should read and understand the terms and conditions of the license they choose before applying it. Licensors should also secure all rights necessary before applying our licenses so that the public can reuse the material as expected. Licensors should clearly mark any material not subject to the license. This includes other CC-licensed material, or material used under an exception or limitation to copyright. More considerations for licensors . Considerations for the public: By using one of our public licenses, a licensor grants the public permission to use the licensed material under specified terms and conditions. If the licensor\u2019s permission is not necessary for any reason\u2013for example, because of any applicable exception or limitation to copyright\u2013then that use is not regulated by the license. Our licenses grant only permissions under copyright and certain other rights that a licensor has authority to grant. Use of the licensed material may still be restricted for other reasons, including because others have copyright or other rights in the material. A licensor may make special requests, such as asking that all changes be marked or described. Although not required by our licenses, you are encouraged to respect those requests where reasonable. More considerations for the public . Creative Commons Attribution-ShareAlike 4.0 International Public License By exercising the Licensed Rights (defined below), You accept and agree to be bound by the terms and conditions of this Creative Commons Attribution-ShareAlike 4.0 International Public License (\"Public License\"). To the extent this Public License may be interpreted as a contract, You are granted the Licensed Rights in consideration of Your acceptance of these terms and conditions, and the Licensor grants You such rights in consideration of benefits the Licensor receives from making the Licensed Material available under these terms and conditions. Section 1 \u2013 Definitions a. Adapted Material means material subject to Copyright and Similar Rights that is derived from or based upon the Licensed Material and in which the Licensed Material is translated, altered, arranged, transformed, or otherwise modified in a manner requiring permission under the Copyright and Similar Rights held by the Licensor. For purposes of this Public License, where the Licensed Material is a musical work, performance, or sound recording, Adapted Material is always produced where the Licensed Material is synched in timed relation with a moving image. b. Adapter's License means the license You apply to Your Copyright and Similar Rights in Your contributions to Adapted Material in accordance with the terms and conditions of this Public License. c. BY-SA Compatible License means a license listed at creativecommons.org/compatiblelicenses , approved by Creative Commons as essentially the equivalent of this Public License. d. Copyright and Similar Rights means copyright and/or similar rights closely related to copyright including, without limitation, performance, broadcast, sound recording, and Sui Generis Database Rights, without regard to how the rights are labeled or categorized. For purposes of this Public License, the rights specified in Section 2(b)(1)-(2) are not Copyright and Similar Rights. e. Effective Technological Measures means those measures that, in the absence of proper authority, may not be circumvented under laws fulfilling obligations under Article 11 of the WIPO Copyright Treaty adopted on December 20, 1996, and/or similar international agreements. f. Exceptions and Limitations means fair use, fair dealing, and/or any other exception or limitation to Copyright and Similar Rights that applies to Your use of the Licensed Material. g. License Elements means the license attributes listed in the name of a Creative Commons Public License. The License Elements of this Public License are Attribution and ShareAlike. h. Licensed Material means the artistic or literary work, database, or other material to which the Licensor applied this Public License. i. Licensed Rights means the rights granted to You subject to the terms and conditions of this Public License, which are limited to all Copyright and Similar Rights that apply to Your use of the Licensed Material and that the Licensor has authority to license. j. Licensor means the individual(s) or entity(ies) granting rights under this Public License. k. Share means to provide material to the public by any means or process that requires permission under the Licensed Rights, such as reproduction, public display, public performance, distribution, dissemination, communication, or importation, and to make material available to the public including in ways that members of the public may access the material from a place and at a time individually chosen by them. l. Sui Generis Database Rights means rights other than copyright resulting from Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, as amended and/or succeeded, as well as other essentially equivalent rights anywhere in the world. m. You means the individual or entity exercising the Licensed Rights under this Public License. Your has a corresponding meaning. Section 2 \u2013 Scope a. License grant. Subject to the terms and conditions of this Public License, the Licensor hereby grants You a worldwide, royalty-free, non-sublicensable, non-exclusive, irrevocable license to exercise the Licensed Rights in the Licensed Material to: A. reproduce and Share the Licensed Material, in whole or in part; and B. produce, reproduce, and Share Adapted Material. Exceptions and Limitations. For the avoidance of doubt, where Exceptions and Limitations apply to Your use, this Public License does not apply, and You do not need to comply with its terms and conditions. Term. The term of this Public License is specified in Section 6(a). Media and formats; technical modifications allowed. The Licensor authorizes You to exercise the Licensed Rights in all media and formats whether now known or hereafter created, and to make technical modifications necessary to do so. The Licensor waives and/or agrees not to assert any right or authority to forbid You from making technical modifications necessary to exercise the Licensed Rights, including technical modifications necessary to circumvent Effective Technological Measures. For purposes of this Public License, simply making modifications authorized by this Section 2(a)(4) never produces Adapted Material. Downstream recipients. A. Offer from the Licensor \u2013 Licensed Material. Every recipient of the Licensed Material automatically receives an offer from the Licensor to exercise the Licensed Rights under the terms and conditions of this Public License. B. Additional offer from the Licensor \u2013 Adapted Material. Every recipient of Adapted Material from You automatically receives an offer from the Licensor to exercise the Licensed Rights in the Adapted Material under the conditions of the Adapter\u2019s License You apply. C. No downstream restrictions. You may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, the Licensed Material if doing so restricts exercise of the Licensed Rights by any recipient of the Licensed Material. No endorsement. Nothing in this Public License constitutes or may be construed as permission to assert or imply that You are, or that Your use of the Licensed Material is, connected with, or sponsored, endorsed, or granted official status by, the Licensor or others designated to receive attribution as provided in Section 3(a)(1)(A)(i). b. Other rights. Moral rights, such as the right of integrity, are not licensed under this Public License, nor are publicity, privacy, and/or other similar personality rights; however, to the extent possible, the Licensor waives and/or agrees not to assert any such rights held by the Licensor to the limited extent necessary to allow You to exercise the Licensed Rights, but not otherwise. Patent and trademark rights are not licensed under this Public License. To the extent possible, the Licensor waives any right to collect royalties from You for the exercise of the Licensed Rights, whether directly or through a collecting society under any voluntary or waivable statutory or compulsory licensing scheme. In all other cases the Licensor expressly reserves any right to collect such royalties. Section 3 \u2013 License Conditions Your exercise of the Licensed Rights is expressly made subject to the following conditions. a. Attribution. If You Share the Licensed Material (including in modified form), You must: A. retain the following if it is supplied by the Licensor with the Licensed Material: i. identification of the creator(s) of the Licensed Material and any others designated to receive attribution, in any reasonable manner requested by the Licensor (including by pseudonym if designated); ii. a copyright notice; iii. a notice that refers to this Public License; iv. a notice that refers to the disclaimer of warranties; v. a URI or hyperlink to the Licensed Material to the extent reasonably practicable; B. indicate if You modified the Licensed Material and retain an indication of any previous modifications; and C. indicate the Licensed Material is licensed under this Public License, and include the text of, or the URI or hyperlink to, this Public License. You may satisfy the conditions in Section 3(a)(1) in any reasonable manner based on the medium, means, and context in which You Share the Licensed Material. For example, it may be reasonable to satisfy the conditions by providing a URI or hyperlink to a resource that includes the required information. If requested by the Licensor, You must remove any of the information required by Section 3(a)(1)(A) to the extent reasonably practicable. b. ShareAlike. In addition to the conditions in Section 3(a), if You Share Adapted Material You produce, the following conditions also apply. The Adapter\u2019s License You apply must be a Creative Commons license with the same License Elements, this version or later, or a BY-SA Compatible License. You must include the text of, or the URI or hyperlink to, the Adapter's License You apply. You may satisfy this condition in any reasonable manner based on the medium, means, and context in which You Share Adapted Material. You may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, Adapted Material that restrict exercise of the rights granted under the Adapter's License You apply. Section 4 \u2013 Sui Generis Database Rights Where the Licensed Rights include Sui Generis Database Rights that apply to Your use of the Licensed Material: a. for the avoidance of doubt, Section 2(a)(1) grants You the right to extract, reuse, reproduce, and Share all or a substantial portion of the contents of the database; b. if You include all or a substantial portion of the database contents in a database in which You have Sui Generis Database Rights, then the database in which You have Sui Generis Database Rights (but not its individual contents) is Adapted Material, including for purposes of Section 3(b); and c. You must comply with the conditions in Section 3(a) if You Share all or a substantial portion of the contents of the database. For the avoidance of doubt, this Section 4 supplements and does not replace Your obligations under this Public License where the Licensed Rights include other Copyright and Similar Rights. Section 5 \u2013 Disclaimer of Warranties and Limitation of Liability a. Unless otherwise separately undertaken by the Licensor, to the extent possible, the Licensor offers the Licensed Material as-is and as-available, and makes no representations or warranties of any kind concerning the Licensed Material, whether express, implied, statutory, or other. This includes, without limitation, warranties of title, merchantability, fitness for a particular purpose, non-infringement, absence of latent or other defects, accuracy, or the presence or absence of errors, whether or not known or discoverable. Where disclaimers of warranties are not allowed in full or in part, this disclaimer may not apply to You. b. To the extent possible, in no event will the Licensor be liable to You on any legal theory (including, without limitation, negligence) or otherwise for any direct, special, indirect, incidental, consequential, punitive, exemplary, or other losses, costs, expenses, or damages arising out of this Public License or use of the Licensed Material, even if the Licensor has been advised of the possibility of such losses, costs, expenses, or damages. Where a limitation of liability is not allowed in full or in part, this limitation may not apply to You. c. The disclaimer of warranties and limitation of liability provided above shall be interpreted in a manner that, to the extent possible, most closely approximates an absolute disclaimer and waiver of all liability. Section 6 \u2013 Term and Termination a. This Public License applies for the term of the Copyright and Similar Rights licensed here. However, if You fail to comply with this Public License, then Your rights under this Public License terminate automatically. b. Where Your right to use the Licensed Material has terminated under Section 6(a), it reinstates: automatically as of the date the violation is cured, provided it is cured within 30 days of Your discovery of the violation; or upon express reinstatement by the Licensor. For the avoidance of doubt, this Section 6(b) does not affect any right the Licensor may have to seek remedies for Your violations of this Public License. c. For the avoidance of doubt, the Licensor may also offer the Licensed Material under separate terms or conditions or stop distributing the Licensed Material at any time; however, doing so will not terminate this Public License. d. Sections 1, 5, 6, 7, and 8 survive termination of this Public License. Section 7 \u2013 Other Terms and Conditions a. The Licensor shall not be bound by any additional or different terms or conditions communicated by You unless expressly agreed. b. Any arrangements, understandings, or agreements regarding the Licensed Material not stated herein are separate from and independent of the terms and conditions of this Public License. Section 8 \u2013 Interpretation a. For the avoidance of doubt, this Public License does not, and shall not be interpreted to, reduce, limit, restrict, or impose conditions on any use of the Licensed Material that could lawfully be made without permission under this Public License. b. To the extent possible, if any provision of this Public License is deemed unenforceable, it shall be automatically reformed to the minimum extent necessary to make it enforceable. If the provision cannot be reformed, it shall be severed from this Public License without affecting the enforceability of the remaining terms and conditions. c. No term or condition of this Public License will be waived and no failure to comply consented to unless expressly agreed to by the Licensor. d. Nothing in this Public License constitutes or may be interpreted as a limitation upon, or waiver of, any privileges and immunities that apply to the Licensor or You, including from the legal processes of any jurisdiction or authority. Creative Commons is not a party to its public licenses. Notwithstanding, Creative Commons may elect to apply one of its public licenses to material it publishes and in those instances will be considered the \u201cLicensor.\u201d The text of the Creative Commons public licenses is dedicated to the public domain under the CC0 Public Domain Dedication . Except for the limited purpose of indicating that material is shared under a Creative Commons public license or as otherwise permitted by the Creative Commons policies published at creativecommons.org/policies , Creative Commons does not authorize the use of the trademark \u201cCreative Commons\u201d or any other trademark or logo of Creative Commons without its prior written consent including, without limitation, in connection with any unauthorized modifications to any of its public licenses or any other arrangements, understandings, or agreements concerning use of licensed material. For the avoidance of doubt, this paragraph does not form part of the public licenses. Creative Commons may be contacted at creativecommons.org.","title":"Creative Commons Attribution-ShareAlike 4.0 International"},{"location":"templates_licenses/cc-by-sa/#creative-commons-attribution-sharealike-40-international","text":"Creative Commons Corporation (\u201cCreative Commons\u201d) is not a law firm and does not provide legal services or legal advice. Distribution of Creative Commons public licenses does not create a lawyer-client or other relationship. Creative Commons makes its licenses and related information available on an \u201cas-is\u201d basis. Creative Commons gives no warranties regarding its licenses, any material licensed under their terms and conditions, or any related information. Creative Commons disclaims all liability for damages resulting from their use to the fullest extent possible.","title":"Creative Commons Attribution-ShareAlike 4.0 International"},{"location":"templates_licenses/cc-by-sa/#using-creative-commons-public-licenses","text":"Creative Commons public licenses provide a standard set of terms and conditions that creators and other rights holders may use to share original works of authorship and other material subject to copyright and certain other rights specified in the public license below. The following considerations are for informational purposes only, are not exhaustive, and do not form part of our licenses. Considerations for licensors: Our public licenses are intended for use by those authorized to give the public permission to use material in ways otherwise restricted by copyright and certain other rights. Our licenses are irrevocable. Licensors should read and understand the terms and conditions of the license they choose before applying it. Licensors should also secure all rights necessary before applying our licenses so that the public can reuse the material as expected. Licensors should clearly mark any material not subject to the license. This includes other CC-licensed material, or material used under an exception or limitation to copyright. More considerations for licensors . Considerations for the public: By using one of our public licenses, a licensor grants the public permission to use the licensed material under specified terms and conditions. If the licensor\u2019s permission is not necessary for any reason\u2013for example, because of any applicable exception or limitation to copyright\u2013then that use is not regulated by the license. Our licenses grant only permissions under copyright and certain other rights that a licensor has authority to grant. Use of the licensed material may still be restricted for other reasons, including because others have copyright or other rights in the material. A licensor may make special requests, such as asking that all changes be marked or described. Although not required by our licenses, you are encouraged to respect those requests where reasonable. More considerations for the public .","title":"Using Creative Commons Public Licenses"},{"location":"templates_licenses/cc-by-sa/#creative-commons-attribution-sharealike-40-international-public-license","text":"By exercising the Licensed Rights (defined below), You accept and agree to be bound by the terms and conditions of this Creative Commons Attribution-ShareAlike 4.0 International Public License (\"Public License\"). To the extent this Public License may be interpreted as a contract, You are granted the Licensed Rights in consideration of Your acceptance of these terms and conditions, and the Licensor grants You such rights in consideration of benefits the Licensor receives from making the Licensed Material available under these terms and conditions.","title":"Creative Commons Attribution-ShareAlike 4.0 International Public License"},{"location":"templates_licenses/cc-by-sa/#section-1-definitions","text":"a. Adapted Material means material subject to Copyright and Similar Rights that is derived from or based upon the Licensed Material and in which the Licensed Material is translated, altered, arranged, transformed, or otherwise modified in a manner requiring permission under the Copyright and Similar Rights held by the Licensor. For purposes of this Public License, where the Licensed Material is a musical work, performance, or sound recording, Adapted Material is always produced where the Licensed Material is synched in timed relation with a moving image. b. Adapter's License means the license You apply to Your Copyright and Similar Rights in Your contributions to Adapted Material in accordance with the terms and conditions of this Public License. c. BY-SA Compatible License means a license listed at creativecommons.org/compatiblelicenses , approved by Creative Commons as essentially the equivalent of this Public License. d. Copyright and Similar Rights means copyright and/or similar rights closely related to copyright including, without limitation, performance, broadcast, sound recording, and Sui Generis Database Rights, without regard to how the rights are labeled or categorized. For purposes of this Public License, the rights specified in Section 2(b)(1)-(2) are not Copyright and Similar Rights. e. Effective Technological Measures means those measures that, in the absence of proper authority, may not be circumvented under laws fulfilling obligations under Article 11 of the WIPO Copyright Treaty adopted on December 20, 1996, and/or similar international agreements. f. Exceptions and Limitations means fair use, fair dealing, and/or any other exception or limitation to Copyright and Similar Rights that applies to Your use of the Licensed Material. g. License Elements means the license attributes listed in the name of a Creative Commons Public License. The License Elements of this Public License are Attribution and ShareAlike. h. Licensed Material means the artistic or literary work, database, or other material to which the Licensor applied this Public License. i. Licensed Rights means the rights granted to You subject to the terms and conditions of this Public License, which are limited to all Copyright and Similar Rights that apply to Your use of the Licensed Material and that the Licensor has authority to license. j. Licensor means the individual(s) or entity(ies) granting rights under this Public License. k. Share means to provide material to the public by any means or process that requires permission under the Licensed Rights, such as reproduction, public display, public performance, distribution, dissemination, communication, or importation, and to make material available to the public including in ways that members of the public may access the material from a place and at a time individually chosen by them. l. Sui Generis Database Rights means rights other than copyright resulting from Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, as amended and/or succeeded, as well as other essentially equivalent rights anywhere in the world. m. You means the individual or entity exercising the Licensed Rights under this Public License. Your has a corresponding meaning.","title":"Section 1 \u2013 Definitions"},{"location":"templates_licenses/cc-by-sa/#section-2-scope","text":"a. License grant. Subject to the terms and conditions of this Public License, the Licensor hereby grants You a worldwide, royalty-free, non-sublicensable, non-exclusive, irrevocable license to exercise the Licensed Rights in the Licensed Material to: A. reproduce and Share the Licensed Material, in whole or in part; and B. produce, reproduce, and Share Adapted Material. Exceptions and Limitations. For the avoidance of doubt, where Exceptions and Limitations apply to Your use, this Public License does not apply, and You do not need to comply with its terms and conditions. Term. The term of this Public License is specified in Section 6(a). Media and formats; technical modifications allowed. The Licensor authorizes You to exercise the Licensed Rights in all media and formats whether now known or hereafter created, and to make technical modifications necessary to do so. The Licensor waives and/or agrees not to assert any right or authority to forbid You from making technical modifications necessary to exercise the Licensed Rights, including technical modifications necessary to circumvent Effective Technological Measures. For purposes of this Public License, simply making modifications authorized by this Section 2(a)(4) never produces Adapted Material. Downstream recipients. A. Offer from the Licensor \u2013 Licensed Material. Every recipient of the Licensed Material automatically receives an offer from the Licensor to exercise the Licensed Rights under the terms and conditions of this Public License. B. Additional offer from the Licensor \u2013 Adapted Material. Every recipient of Adapted Material from You automatically receives an offer from the Licensor to exercise the Licensed Rights in the Adapted Material under the conditions of the Adapter\u2019s License You apply. C. No downstream restrictions. You may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, the Licensed Material if doing so restricts exercise of the Licensed Rights by any recipient of the Licensed Material. No endorsement. Nothing in this Public License constitutes or may be construed as permission to assert or imply that You are, or that Your use of the Licensed Material is, connected with, or sponsored, endorsed, or granted official status by, the Licensor or others designated to receive attribution as provided in Section 3(a)(1)(A)(i). b. Other rights. Moral rights, such as the right of integrity, are not licensed under this Public License, nor are publicity, privacy, and/or other similar personality rights; however, to the extent possible, the Licensor waives and/or agrees not to assert any such rights held by the Licensor to the limited extent necessary to allow You to exercise the Licensed Rights, but not otherwise. Patent and trademark rights are not licensed under this Public License. To the extent possible, the Licensor waives any right to collect royalties from You for the exercise of the Licensed Rights, whether directly or through a collecting society under any voluntary or waivable statutory or compulsory licensing scheme. In all other cases the Licensor expressly reserves any right to collect such royalties.","title":"Section 2 \u2013 Scope"},{"location":"templates_licenses/cc-by-sa/#section-3-license-conditions","text":"Your exercise of the Licensed Rights is expressly made subject to the following conditions. a. Attribution. If You Share the Licensed Material (including in modified form), You must: A. retain the following if it is supplied by the Licensor with the Licensed Material: i. identification of the creator(s) of the Licensed Material and any others designated to receive attribution, in any reasonable manner requested by the Licensor (including by pseudonym if designated); ii. a copyright notice; iii. a notice that refers to this Public License; iv. a notice that refers to the disclaimer of warranties; v. a URI or hyperlink to the Licensed Material to the extent reasonably practicable; B. indicate if You modified the Licensed Material and retain an indication of any previous modifications; and C. indicate the Licensed Material is licensed under this Public License, and include the text of, or the URI or hyperlink to, this Public License. You may satisfy the conditions in Section 3(a)(1) in any reasonable manner based on the medium, means, and context in which You Share the Licensed Material. For example, it may be reasonable to satisfy the conditions by providing a URI or hyperlink to a resource that includes the required information. If requested by the Licensor, You must remove any of the information required by Section 3(a)(1)(A) to the extent reasonably practicable. b. ShareAlike. In addition to the conditions in Section 3(a), if You Share Adapted Material You produce, the following conditions also apply. The Adapter\u2019s License You apply must be a Creative Commons license with the same License Elements, this version or later, or a BY-SA Compatible License. You must include the text of, or the URI or hyperlink to, the Adapter's License You apply. You may satisfy this condition in any reasonable manner based on the medium, means, and context in which You Share Adapted Material. You may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, Adapted Material that restrict exercise of the rights granted under the Adapter's License You apply.","title":"Section 3 \u2013 License Conditions"},{"location":"templates_licenses/cc-by-sa/#section-4-sui-generis-database-rights","text":"Where the Licensed Rights include Sui Generis Database Rights that apply to Your use of the Licensed Material: a. for the avoidance of doubt, Section 2(a)(1) grants You the right to extract, reuse, reproduce, and Share all or a substantial portion of the contents of the database; b. if You include all or a substantial portion of the database contents in a database in which You have Sui Generis Database Rights, then the database in which You have Sui Generis Database Rights (but not its individual contents) is Adapted Material, including for purposes of Section 3(b); and c. You must comply with the conditions in Section 3(a) if You Share all or a substantial portion of the contents of the database. For the avoidance of doubt, this Section 4 supplements and does not replace Your obligations under this Public License where the Licensed Rights include other Copyright and Similar Rights.","title":"Section 4 \u2013 Sui Generis Database Rights"},{"location":"templates_licenses/cc-by-sa/#section-5-disclaimer-of-warranties-and-limitation-of-liability","text":"a. Unless otherwise separately undertaken by the Licensor, to the extent possible, the Licensor offers the Licensed Material as-is and as-available, and makes no representations or warranties of any kind concerning the Licensed Material, whether express, implied, statutory, or other. This includes, without limitation, warranties of title, merchantability, fitness for a particular purpose, non-infringement, absence of latent or other defects, accuracy, or the presence or absence of errors, whether or not known or discoverable. Where disclaimers of warranties are not allowed in full or in part, this disclaimer may not apply to You. b. To the extent possible, in no event will the Licensor be liable to You on any legal theory (including, without limitation, negligence) or otherwise for any direct, special, indirect, incidental, consequential, punitive, exemplary, or other losses, costs, expenses, or damages arising out of this Public License or use of the Licensed Material, even if the Licensor has been advised of the possibility of such losses, costs, expenses, or damages. Where a limitation of liability is not allowed in full or in part, this limitation may not apply to You. c. The disclaimer of warranties and limitation of liability provided above shall be interpreted in a manner that, to the extent possible, most closely approximates an absolute disclaimer and waiver of all liability.","title":"Section 5 \u2013 Disclaimer of Warranties and Limitation of Liability"},{"location":"templates_licenses/cc-by-sa/#section-6-term-and-termination","text":"a. This Public License applies for the term of the Copyright and Similar Rights licensed here. However, if You fail to comply with this Public License, then Your rights under this Public License terminate automatically. b. Where Your right to use the Licensed Material has terminated under Section 6(a), it reinstates: automatically as of the date the violation is cured, provided it is cured within 30 days of Your discovery of the violation; or upon express reinstatement by the Licensor. For the avoidance of doubt, this Section 6(b) does not affect any right the Licensor may have to seek remedies for Your violations of this Public License. c. For the avoidance of doubt, the Licensor may also offer the Licensed Material under separate terms or conditions or stop distributing the Licensed Material at any time; however, doing so will not terminate this Public License. d. Sections 1, 5, 6, 7, and 8 survive termination of this Public License.","title":"Section 6 \u2013 Term and Termination"},{"location":"templates_licenses/cc-by-sa/#section-7-other-terms-and-conditions","text":"a. The Licensor shall not be bound by any additional or different terms or conditions communicated by You unless expressly agreed. b. Any arrangements, understandings, or agreements regarding the Licensed Material not stated herein are separate from and independent of the terms and conditions of this Public License.","title":"Section 7 \u2013 Other Terms and Conditions"},{"location":"templates_licenses/cc-by-sa/#section-8-interpretation","text":"a. For the avoidance of doubt, this Public License does not, and shall not be interpreted to, reduce, limit, restrict, or impose conditions on any use of the Licensed Material that could lawfully be made without permission under this Public License. b. To the extent possible, if any provision of this Public License is deemed unenforceable, it shall be automatically reformed to the minimum extent necessary to make it enforceable. If the provision cannot be reformed, it shall be severed from this Public License without affecting the enforceability of the remaining terms and conditions. c. No term or condition of this Public License will be waived and no failure to comply consented to unless expressly agreed to by the Licensor. d. Nothing in this Public License constitutes or may be interpreted as a limitation upon, or waiver of, any privileges and immunities that apply to the Licensor or You, including from the legal processes of any jurisdiction or authority. Creative Commons is not a party to its public licenses. Notwithstanding, Creative Commons may elect to apply one of its public licenses to material it publishes and in those instances will be considered the \u201cLicensor.\u201d The text of the Creative Commons public licenses is dedicated to the public domain under the CC0 Public Domain Dedication . Except for the limited purpose of indicating that material is shared under a Creative Commons public license or as otherwise permitted by the Creative Commons policies published at creativecommons.org/policies , Creative Commons does not authorize the use of the trademark \u201cCreative Commons\u201d or any other trademark or logo of Creative Commons without its prior written consent including, without limitation, in connection with any unauthorized modifications to any of its public licenses or any other arrangements, understandings, or agreements concerning use of licensed material. For the avoidance of doubt, this paragraph does not form part of the public licenses. Creative Commons may be contacted at creativecommons.org.","title":"Section 8 \u2013 Interpretation"},{"location":"templates_licenses/cc0/","text":"Creative Commons CC0 1.0 Universal CREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE LEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS INFORMATION ON AN \"AS-IS\" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES REGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED HEREUNDER. Statement of Purpose The laws of most jurisdictions throughout the world automatically confer exclusive Copyright and Related Rights (defined below) upon the creator and subsequent owner(s) (each and all, an \"owner\") of an original work of authorship and/or a database (each, a \"Work\"). Certain owners wish to permanently relinquish those rights to a Work for the purpose of contributing to a commons of creative, cultural and scientific works (\"Commons\") that the public can reliably and without fear of later claims of infringement build upon, modify, incorporate in other works, reuse and redistribute as freely as possible in any form whatsoever and for any purposes, including without limitation commercial purposes. These owners may contribute to the Commons to promote the ideal of a free culture and the further production of creative, cultural and scientific works, or to gain reputation or greater distribution for their Work in part through the use and efforts of others. For these and/or other purposes and motivations, and without any expectation of additional consideration or compensation, the person associating CC0 with a Work (the \"Affirmer\"), to the extent that he or she is an owner of Copyright and Related Rights in the Work, voluntarily elects to apply CC0 to the Work and publicly distribute the Work under its terms, with knowledge of his or her Copyright and Related Rights in the Work and the meaning and intended legal effect of CC0 on those rights. Copyright and Related Rights. A Work made available under CC0 may be protected by copyright and related or neighboring rights (\"Copyright and Related Rights\"). Copyright and Related Rights include, but are not limited to, the following: i. the right to reproduce, adapt, distribute, perform, display, communicate, and translate a Work; ii. moral rights retained by the original author(s) and/or performer(s); iii. publicity and privacy rights pertaining to a person's image or likeness depicted in a Work; iv. rights protecting against unfair competition in regards to a Work, subject to the limitations in paragraph 4(a), below; v. rights protecting the extraction, dissemination, use and reuse of data in a Work; vi. database rights (such as those arising under Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, and under any national implementation thereof, including any amended or successor version of such directive); and vii. other similar, equivalent or corresponding rights throughout the world based on applicable law or treaty, and any national implementations thereof. Waiver. To the greatest extent permitted by, but not in contravention of, applicable law, Affirmer hereby overtly, fully, permanently, irrevocably and unconditionally waives, abandons, and surrenders all of Affirmer's Copyright and Related Rights and associated claims and causes of action, whether now known or unknown (including existing as well as future claims and causes of action), in the Work (i) in all territories worldwide, (ii) for the maximum duration provided by applicable law or treaty (including future time extensions), (iii) in any current or future medium and for any number of copies, and (iv) for any purpose whatsoever, including without limitation commercial, advertising or promotional purposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each member of the public at large and to the detriment of Affirmer's heirs and successors, fully intending that such Waiver shall not be subject to revocation, rescission, cancellation, termination, or any other legal or equitable action to disrupt the quiet enjoyment of the Work by the public as contemplated by Affirmer's express Statement of Purpose. Public License Fallback. Should any part of the Waiver for any reason be judged legally invalid or ineffective under applicable law, then the Waiver shall be preserved to the maximum extent permitted taking into account Affirmer's express Statement of Purpose. In addition, to the extent the Waiver is so judged Affirmer hereby grants to each affected person a royalty-free, non transferable, non sublicensable, non exclusive, irrevocable and unconditional license to exercise Affirmer's Copyright and Related Rights in the Work (i) in all territories worldwide, (ii) for the maximum duration provided by applicable law or treaty (including future time extensions), (iii) in any current or future medium and for any number of copies, and (iv) for any purpose whatsoever, including without limitation commercial, advertising or promotional purposes (the \"License\"). The License shall be deemed effective as of the date CC0 was applied by Affirmer to the Work. Should any part of the License for any reason be judged legally invalid or ineffective under applicable law, such partial invalidity or ineffectiveness shall not invalidate the remainder of the License, and in such case Affirmer hereby affirms that he or she will not (i) exercise any of his or her remaining Copyright and Related Rights in the Work or (ii) assert any associated claims and causes of action with respect to the Work, in either case contrary to Affirmer's express Statement of Purpose. Limitations and Disclaimers. a. No trademark or patent rights held by Affirmer are waived, abandoned, surrendered, licensed or otherwise affected by this document. b. Affirmer offers the Work as-is and makes no representations or warranties of any kind concerning the Work, express, implied, statutory or otherwise, including without limitation warranties of title, merchantability, fitness for a particular purpose, non infringement, or the absence of latent or other defects, accuracy, or the present or absence of errors, whether or not discoverable, all to the greatest extent permissible under applicable law. c. Affirmer disclaims responsibility for clearing rights of other persons that may apply to the Work or any use thereof, including without limitation any person's Copyright and Related Rights in the Work. Further, Affirmer disclaims responsibility for obtaining any necessary consents, permissions or other rights required for any use of the Work. d. Affirmer understands and acknowledges that Creative Commons is not a party to this document and has no duty or obligation with respect to this CC0 or use of the Work.","title":"Creative Commons CC0 1.0 Universal"},{"location":"templates_licenses/cc0/#creative-commons-cc0-10-universal","text":"CREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE LEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS INFORMATION ON AN \"AS-IS\" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES REGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED HEREUNDER.","title":"Creative Commons CC0 1.0 Universal"},{"location":"templates_licenses/cc0/#statement-of-purpose","text":"The laws of most jurisdictions throughout the world automatically confer exclusive Copyright and Related Rights (defined below) upon the creator and subsequent owner(s) (each and all, an \"owner\") of an original work of authorship and/or a database (each, a \"Work\"). Certain owners wish to permanently relinquish those rights to a Work for the purpose of contributing to a commons of creative, cultural and scientific works (\"Commons\") that the public can reliably and without fear of later claims of infringement build upon, modify, incorporate in other works, reuse and redistribute as freely as possible in any form whatsoever and for any purposes, including without limitation commercial purposes. These owners may contribute to the Commons to promote the ideal of a free culture and the further production of creative, cultural and scientific works, or to gain reputation or greater distribution for their Work in part through the use and efforts of others. For these and/or other purposes and motivations, and without any expectation of additional consideration or compensation, the person associating CC0 with a Work (the \"Affirmer\"), to the extent that he or she is an owner of Copyright and Related Rights in the Work, voluntarily elects to apply CC0 to the Work and publicly distribute the Work under its terms, with knowledge of his or her Copyright and Related Rights in the Work and the meaning and intended legal effect of CC0 on those rights. Copyright and Related Rights. A Work made available under CC0 may be protected by copyright and related or neighboring rights (\"Copyright and Related Rights\"). Copyright and Related Rights include, but are not limited to, the following: i. the right to reproduce, adapt, distribute, perform, display, communicate, and translate a Work; ii. moral rights retained by the original author(s) and/or performer(s); iii. publicity and privacy rights pertaining to a person's image or likeness depicted in a Work; iv. rights protecting against unfair competition in regards to a Work, subject to the limitations in paragraph 4(a), below; v. rights protecting the extraction, dissemination, use and reuse of data in a Work; vi. database rights (such as those arising under Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, and under any national implementation thereof, including any amended or successor version of such directive); and vii. other similar, equivalent or corresponding rights throughout the world based on applicable law or treaty, and any national implementations thereof. Waiver. To the greatest extent permitted by, but not in contravention of, applicable law, Affirmer hereby overtly, fully, permanently, irrevocably and unconditionally waives, abandons, and surrenders all of Affirmer's Copyright and Related Rights and associated claims and causes of action, whether now known or unknown (including existing as well as future claims and causes of action), in the Work (i) in all territories worldwide, (ii) for the maximum duration provided by applicable law or treaty (including future time extensions), (iii) in any current or future medium and for any number of copies, and (iv) for any purpose whatsoever, including without limitation commercial, advertising or promotional purposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each member of the public at large and to the detriment of Affirmer's heirs and successors, fully intending that such Waiver shall not be subject to revocation, rescission, cancellation, termination, or any other legal or equitable action to disrupt the quiet enjoyment of the Work by the public as contemplated by Affirmer's express Statement of Purpose. Public License Fallback. Should any part of the Waiver for any reason be judged legally invalid or ineffective under applicable law, then the Waiver shall be preserved to the maximum extent permitted taking into account Affirmer's express Statement of Purpose. In addition, to the extent the Waiver is so judged Affirmer hereby grants to each affected person a royalty-free, non transferable, non sublicensable, non exclusive, irrevocable and unconditional license to exercise Affirmer's Copyright and Related Rights in the Work (i) in all territories worldwide, (ii) for the maximum duration provided by applicable law or treaty (including future time extensions), (iii) in any current or future medium and for any number of copies, and (iv) for any purpose whatsoever, including without limitation commercial, advertising or promotional purposes (the \"License\"). The License shall be deemed effective as of the date CC0 was applied by Affirmer to the Work. Should any part of the License for any reason be judged legally invalid or ineffective under applicable law, such partial invalidity or ineffectiveness shall not invalidate the remainder of the License, and in such case Affirmer hereby affirms that he or she will not (i) exercise any of his or her remaining Copyright and Related Rights in the Work or (ii) assert any associated claims and causes of action with respect to the Work, in either case contrary to Affirmer's express Statement of Purpose. Limitations and Disclaimers. a. No trademark or patent rights held by Affirmer are waived, abandoned, surrendered, licensed or otherwise affected by this document. b. Affirmer offers the Work as-is and makes no representations or warranties of any kind concerning the Work, express, implied, statutory or otherwise, including without limitation warranties of title, merchantability, fitness for a particular purpose, non infringement, or the absence of latent or other defects, accuracy, or the present or absence of errors, whether or not discoverable, all to the greatest extent permissible under applicable law. c. Affirmer disclaims responsibility for clearing rights of other persons that may apply to the Work or any use thereof, including without limitation any person's Copyright and Related Rights in the Work. Further, Affirmer disclaims responsibility for obtaining any necessary consents, permissions or other rights required for any use of the Work. d. Affirmer understands and acknowledges that Creative Commons is not a party to this document and has no duty or obligation with respect to this CC0 or use of the Work.","title":"Statement of Purpose"},{"location":"templates_licenses/contributor_agreement_v01/","text":"[Version 2021-11-10] Goal We require that contributors to Nautilus (as defined below) agree to this Nautilus Cyberneering Contributor Agreement (NCCA) to ensure that contributions to Nautilus have acceptable licensing terms. Non-Goals The NCCA is not a copyright assignment agreement. The NCCA does not somehow supersede the existing licensing terms that apply to Nautilus contributions. There are two important subpoints here. First, the NCCA does not apply to upstream code (or other material) that you didn't write; indeed, it would be preposterous for it to attempt to do so. Note the narrow way in which we have defined capital-c \"Contribution\". Second, the main provision of the NCCA specifies that a default license will apply to code that you wrote, but only to the extent that you have not bothered to put an explicit license on it. Therefore, the NCCA is not some sort of special permissive license granted to any party, despite the explicit choice of a more restrictive license by you or by upstream developers. Terms Section 1 \u2013 Definitions \"Acceptable License For Nautilus\" means a license selected from the appropriate categorical sublist of the full list of acceptable licenses for Nautilus, currently located at https://nautilus-cyberneering.de/licensing/ , as that list may be revised from time to time by Nautilus Cyberneering GmbH. \"Acceptable Licenses For Nautilus\" means that full list. \"AGPLv3\" means the license identified as \"Affero General Public License 3.0\", as published at https://www.gnu.org/licenses/agpl-3.0.en.html . \"CC-0\" means the Creative Commons 1.0 Universal license, as published at https://creativecommons.org/publicdomain/zero/1.0/legalcode . \"CC-BY-SA\" means the Creative Commons Attribution-ShareAlike 4.0 International license, as published at https://creativecommons.org/licenses/by-sa/4.0/legalcode . \"Code\" means (i) software code, (ii) any other functional material whose principal purpose is to control or facilitate the building of packages, such as an RPM spec file, (iii) font files, and (iv) other kinds of copyrightable material that the Nautilus Cyberneering GmbH has classified as \"code\" rather than \"content\". \"Content\" means any copyrightable material that is not Code, such as, without limitation, (i) non-functional data sets, (ii) documentation, (iii) wiki edits, (iv) music files, (v) graphic image files, (vi) help files, and (vii) other kinds of copyrightable material that the Nautilus Council has classified as \"content\" rather than \"code\". \"Contribution\" means a Work that You created, excluding any portion that was created by someone else. (For example, if You Submit a package to Nautilus, the spec file You write may be a Contribution, but all the upstream code in the associated Package that You did not write is not a Contribution for purposes of this NCCA.) A Contribution consists either of Code or of Content. \"Current Default License\" , with respect to a Contribution, means (i) if the Contribution is Code, the AGPLv3 License, and (ii) if the Contribution is Content, CC-BY-SA. \"Future Public Domain License\" , with respect to a Contribution, means (i) if the Contribution is Code, the MIT-0 License, and (ii) if the Contribution is Content, CC-0. \"Licensed\" means covered by explicit licensing terms that are conspicuous and readily discernible to recipients. \"Submit\" means to use some mode of digital communication (for example, without limitation, mailing lists, bug tracking systems, and source code version control systems administered by Nautilus) to voluntarily provide a Contribution to Nautilus. \"Unlicensed\" means not Licensed. \"MIT-0\" means the license identified as \"MIT No Attribution\", as published at https://opensource.org/licenses/MIT-0 . \"Nautilus\" means the community project led by the Nautilus Cyberneering GmbH https://nautilus-cyberneering.de/ . \"Nautilus Community\" means (i) all Nautilus participants, and (ii) all persons receiving Contributions directly or indirectly from or through Nautilus. \"Work\" means a copyrightable work of authorship. A Work may be a portion of a larger Work, and a Work may be a modification of or addition to another Work. \"You\" means the individual accepting this instance of the NCCA. Section 2 \u2013 List of Acceptable Licenses for Nautilus CC-BY-SA CC-0 AGPLv3 MIT-0 Section 3 \u2013 Copyright Permission Required for All Contributions If You are not the copyright holder of a given Contribution that You wish to Submit to Nautilus (for example, if Your employer or university holds copyright in it), it is Your responsibility to first obtain authorization from the copyright holder to Submit the Contribution under the terms of this NCCA on behalf of, or otherwise with the permission of, that copyright holder. One form of such authorization is for the copyright holder to place, or permit You to place, an Acceptable License For Nautilus on the Contribution. Section 4 \u2013 Licensed Contributions If Your Contribution is Licensed, Your Contribution will be governed by the terms under which it has been licensed. Section 5 \u2013 Default Licensing of Unlicensed Contributions If You Submit an Unlicensed Contribution to Nautilus, the license to the Nautilus Community for that Contribution shall be the Current Default License. The Nautilus Cyberneering GmbH may, by public announcement, subsequently designate an additional or alternative default license for a given category of Contribution (a \"Later Default License\"). A Later Default License shall be chosen from the appropriate categorical sublist of Acceptable Licenses For Nautilus. Once a Later Default License has been designated, Your Unlicensed Contribution shall also be licensed to the Nautilus Community under that Later Default License. Such designation shall not affect the continuing applicability of the Current Default License to Your Contribution. You consent to having Nautilus provide reasonable notice of Your licensing of Your Contribution under the Current Default License (and, if applicable, a Later Default License) in a manner determined by Nautilus. Section 6 \u2013 Automatic Future Public Domain License You consent that your contribution under the Current Default License is granted the Future Public Domain License automatically after 5 years of submission. Section 7 \u2013 Public Domain United States Government Works Sections 3 through 6 of this NCCA do not apply to any Contribution to the extent that it is a work of the United States Government for which copyright is unavailable under 17 U.S.C. 105. Section 8 \u2013 Acceptance You must signify Your assent to the terms of this NCCA through specific electronic means established by Nautilus. You may also, at Your option, and without eliminating the requirement set forth in the preceding paragraph, send a copy of this NCCA, bearing Your written signature indicating Your acceptance of its terms, by email to legal@nautilus-cyberneering.de, or by postal mail to: Nautilus Legal c/o Nautilus Cyberneering GmbH Oberhachingerstr. 46B 2031 Gr\u00fcnwald Germany Section 9 \u2013 Notes This document is based upon: The Fedora Project Contributor Agreement . [Version 2021-05-04]","title":"Contributor agreement v01"},{"location":"templates_licenses/contributor_agreement_v01/#goal","text":"We require that contributors to Nautilus (as defined below) agree to this Nautilus Cyberneering Contributor Agreement (NCCA) to ensure that contributions to Nautilus have acceptable licensing terms.","title":"Goal"},{"location":"templates_licenses/contributor_agreement_v01/#non-goals","text":"The NCCA is not a copyright assignment agreement. The NCCA does not somehow supersede the existing licensing terms that apply to Nautilus contributions. There are two important subpoints here. First, the NCCA does not apply to upstream code (or other material) that you didn't write; indeed, it would be preposterous for it to attempt to do so. Note the narrow way in which we have defined capital-c \"Contribution\". Second, the main provision of the NCCA specifies that a default license will apply to code that you wrote, but only to the extent that you have not bothered to put an explicit license on it. Therefore, the NCCA is not some sort of special permissive license granted to any party, despite the explicit choice of a more restrictive license by you or by upstream developers.","title":"Non-Goals"},{"location":"templates_licenses/contributor_agreement_v01/#terms","text":"","title":"Terms"},{"location":"templates_licenses/contributor_agreement_v01/#section-1-definitions","text":"\"Acceptable License For Nautilus\" means a license selected from the appropriate categorical sublist of the full list of acceptable licenses for Nautilus, currently located at https://nautilus-cyberneering.de/licensing/ , as that list may be revised from time to time by Nautilus Cyberneering GmbH. \"Acceptable Licenses For Nautilus\" means that full list. \"AGPLv3\" means the license identified as \"Affero General Public License 3.0\", as published at https://www.gnu.org/licenses/agpl-3.0.en.html . \"CC-0\" means the Creative Commons 1.0 Universal license, as published at https://creativecommons.org/publicdomain/zero/1.0/legalcode . \"CC-BY-SA\" means the Creative Commons Attribution-ShareAlike 4.0 International license, as published at https://creativecommons.org/licenses/by-sa/4.0/legalcode . \"Code\" means (i) software code, (ii) any other functional material whose principal purpose is to control or facilitate the building of packages, such as an RPM spec file, (iii) font files, and (iv) other kinds of copyrightable material that the Nautilus Cyberneering GmbH has classified as \"code\" rather than \"content\". \"Content\" means any copyrightable material that is not Code, such as, without limitation, (i) non-functional data sets, (ii) documentation, (iii) wiki edits, (iv) music files, (v) graphic image files, (vi) help files, and (vii) other kinds of copyrightable material that the Nautilus Council has classified as \"content\" rather than \"code\". \"Contribution\" means a Work that You created, excluding any portion that was created by someone else. (For example, if You Submit a package to Nautilus, the spec file You write may be a Contribution, but all the upstream code in the associated Package that You did not write is not a Contribution for purposes of this NCCA.) A Contribution consists either of Code or of Content. \"Current Default License\" , with respect to a Contribution, means (i) if the Contribution is Code, the AGPLv3 License, and (ii) if the Contribution is Content, CC-BY-SA. \"Future Public Domain License\" , with respect to a Contribution, means (i) if the Contribution is Code, the MIT-0 License, and (ii) if the Contribution is Content, CC-0. \"Licensed\" means covered by explicit licensing terms that are conspicuous and readily discernible to recipients. \"Submit\" means to use some mode of digital communication (for example, without limitation, mailing lists, bug tracking systems, and source code version control systems administered by Nautilus) to voluntarily provide a Contribution to Nautilus. \"Unlicensed\" means not Licensed. \"MIT-0\" means the license identified as \"MIT No Attribution\", as published at https://opensource.org/licenses/MIT-0 . \"Nautilus\" means the community project led by the Nautilus Cyberneering GmbH https://nautilus-cyberneering.de/ . \"Nautilus Community\" means (i) all Nautilus participants, and (ii) all persons receiving Contributions directly or indirectly from or through Nautilus. \"Work\" means a copyrightable work of authorship. A Work may be a portion of a larger Work, and a Work may be a modification of or addition to another Work. \"You\" means the individual accepting this instance of the NCCA.","title":"Section 1 \u2013 Definitions"},{"location":"templates_licenses/contributor_agreement_v01/#section-2-list-of-acceptable-licenses-for-nautilus","text":"CC-BY-SA CC-0 AGPLv3 MIT-0","title":"Section 2 \u2013 List of Acceptable Licenses for Nautilus"},{"location":"templates_licenses/contributor_agreement_v01/#section-3-copyright-permission-required-for-all-contributions","text":"If You are not the copyright holder of a given Contribution that You wish to Submit to Nautilus (for example, if Your employer or university holds copyright in it), it is Your responsibility to first obtain authorization from the copyright holder to Submit the Contribution under the terms of this NCCA on behalf of, or otherwise with the permission of, that copyright holder. One form of such authorization is for the copyright holder to place, or permit You to place, an Acceptable License For Nautilus on the Contribution.","title":"Section 3 \u2013 Copyright Permission Required for All Contributions"},{"location":"templates_licenses/contributor_agreement_v01/#section-4-licensed-contributions","text":"If Your Contribution is Licensed, Your Contribution will be governed by the terms under which it has been licensed.","title":"Section 4 \u2013 Licensed Contributions"},{"location":"templates_licenses/contributor_agreement_v01/#section-5-default-licensing-of-unlicensed-contributions","text":"If You Submit an Unlicensed Contribution to Nautilus, the license to the Nautilus Community for that Contribution shall be the Current Default License. The Nautilus Cyberneering GmbH may, by public announcement, subsequently designate an additional or alternative default license for a given category of Contribution (a \"Later Default License\"). A Later Default License shall be chosen from the appropriate categorical sublist of Acceptable Licenses For Nautilus. Once a Later Default License has been designated, Your Unlicensed Contribution shall also be licensed to the Nautilus Community under that Later Default License. Such designation shall not affect the continuing applicability of the Current Default License to Your Contribution. You consent to having Nautilus provide reasonable notice of Your licensing of Your Contribution under the Current Default License (and, if applicable, a Later Default License) in a manner determined by Nautilus.","title":"Section 5 \u2013 Default Licensing of Unlicensed Contributions"},{"location":"templates_licenses/contributor_agreement_v01/#section-6-automatic-future-public-domain-license","text":"You consent that your contribution under the Current Default License is granted the Future Public Domain License automatically after 5 years of submission.","title":"Section 6 \u2013 Automatic Future Public Domain License"},{"location":"templates_licenses/contributor_agreement_v01/#section-7-public-domain-united-states-government-works","text":"Sections 3 through 6 of this NCCA do not apply to any Contribution to the extent that it is a work of the United States Government for which copyright is unavailable under 17 U.S.C. 105.","title":"Section 7 \u2013 Public Domain United States Government Works"},{"location":"templates_licenses/contributor_agreement_v01/#section-8-acceptance","text":"You must signify Your assent to the terms of this NCCA through specific electronic means established by Nautilus. You may also, at Your option, and without eliminating the requirement set forth in the preceding paragraph, send a copy of this NCCA, bearing Your written signature indicating Your acceptance of its terms, by email to legal@nautilus-cyberneering.de, or by postal mail to: Nautilus Legal c/o Nautilus Cyberneering GmbH Oberhachingerstr. 46B 2031 Gr\u00fcnwald Germany","title":"Section 8 \u2013 Acceptance"},{"location":"templates_licenses/contributor_agreement_v01/#section-9-notes","text":"This document is based upon: The Fedora Project Contributor Agreement . [Version 2021-05-04]","title":"Section 9 \u2013 Notes"},{"location":"templates_licenses/mit-0/","text":"Copyright 2021 Nautilus Cyberneering GmbH Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Copyright 2021 Nautilus Cyberneering GmbH"},{"location":"templates_licenses/mit-0/#copyright-2021-nautilus-cyberneering-gmbh","text":"Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Copyright 2021 Nautilus Cyberneering GmbH"},{"location":"templates_licenses/mpl-2.0/","text":"Mozilla Public License Version 2.0 1. Definitions 1.1. \"Contributor\" means each individual or legal entity that creates, contributes to the creation of, or owns Covered Software. 1.2. \"Contributor Version\" means the combination of the Contributions of others (if any) used by a Contributor and that particular Contributor's Contribution. 1.3. \"Contribution\" means Covered Software of a particular Contributor. 1.4. \"Covered Software\" means Source Code Form to which the initial Contributor has attached the notice in Exhibit A, the Executable Form of such Source Code Form, and Modifications of such Source Code Form, in each case including portions thereof. 1.5. \"Incompatible With Secondary Licenses\" means (a) that the initial Contributor has attached the notice described in Exhibit B to the Covered Software; or (b) that the Covered Software was made available under the terms of version 1.1 or earlier of the License, but not also under the terms of a Secondary License. 1.6. \"Executable Form\" means any form of the work other than Source Code Form. 1.7. \"Larger Work\" means a work that combines Covered Software with other material, in a separate file or files, that is not Covered Software. 1.8. \"License\" means this document. 1.9. \"Licensable\" means having the right to grant, to the maximum extent possible, whether at the time of the initial grant or subsequently, any and all of the rights conveyed by this License. 1.10. \"Modifications\" means any of the following: (a) any file in Source Code Form that results from an addition to, deletion from, or modification of the contents of Covered Software; or (b) any new file in Source Code Form that contains any Covered Software. 1.11. \"Patent Claims\" of a Contributor means any patent claim(s), including without limitation, method, process, and apparatus claims, in any patent Licensable by such Contributor that would be infringed, but for the grant of the License, by the making, using, selling, offering for sale, having made, import, or transfer of either its Contributions or its Contributor Version. 1.12. \"Secondary License\" means either the GNU General Public License, Version 2.0, the GNU Lesser General Public License, Version 2.1, the GNU Affero General Public License, Version 3.0, or any later versions of those licenses. 1.13. \"Source Code Form\" means the form of the work preferred for making modifications. 1.14. \"You\" (or \"Your\") means an individual or a legal entity exercising rights under this License. For legal entities, \"You\" includes any entity that controls, is controlled by, or is under common control with You. For purposes of this definition, \"control\" means (a) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (b) ownership of more than fifty percent (50%) of the outstanding shares or beneficial ownership of such entity. 2. License Grants and Conditions 2.1. Grants Each Contributor hereby grants You a world-wide, royalty-free, non-exclusive license: (a) under intellectual property rights (other than patent or trademark) Licensable by such Contributor to use, reproduce, make available, modify, display, perform, distribute, and otherwise exploit its Contributions, either on an unmodified basis, with Modifications, or as part of a Larger Work; and (b) under Patent Claims of such Contributor to make, use, sell, offer for sale, have made, import, and otherwise transfer either its Contributions or its Contributor Version. 2.2. Effective Date The licenses granted in Section 2.1 with respect to any Contribution become effective for each Contribution on the date the Contributor first distributes such Contribution. 2.3. Limitations on Grant Scope The licenses granted in this Section 2 are the only rights granted under this License. No additional rights or licenses will be implied from the distribution or licensing of Covered Software under this License. Notwithstanding Section 2.1(b) above, no patent license is granted by a Contributor: (a) for any code that a Contributor has removed from Covered Software; or (b) for infringements caused by: (i) Your and any other third party's modifications of Covered Software, or (ii) the combination of its Contributions with other software (except as part of its Contributor Version); or (c) under Patent Claims infringed by Covered Software in the absence of its Contributions. This License does not grant any rights in the trademarks, service marks, or logos of any Contributor (except as may be necessary to comply with the notice requirements in Section 3.4). 2.4. Subsequent Licenses No Contributor makes additional grants as a result of Your choice to distribute the Covered Software under a subsequent version of this License (see Section 10.2) or under the terms of a Secondary License (if permitted under the terms of Section 3.3). 2.5. Representation Each Contributor represents that the Contributor believes its Contributions are its original creation(s) or it has sufficient rights to grant the rights to its Contributions conveyed by this License. 2.6. Fair Use This License is not intended to limit any rights You have under applicable copyright doctrines of fair use, fair dealing, or other equivalents. 2.7. Conditions Sections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted in Section 2.1. 3. Responsibilities 3.1. Distribution of Source Form All distribution of Covered Software in Source Code Form, including any Modifications that You create or to which You contribute, must be under the terms of this License. You must inform recipients that the Source Code Form of the Covered Software is governed by the terms of this License, and how they can obtain a copy of this License. You may not attempt to alter or restrict the recipients' rights in the Source Code Form. 3.2. Distribution of Executable Form If You distribute Covered Software in Executable Form then: (a) such Covered Software must also be made available in Source Code Form, as described in Section 3.1, and You must inform recipients of the Executable Form how they can obtain a copy of such Source Code Form by reasonable means in a timely manner, at a charge no more than the cost of distribution to the recipient; and (b) You may distribute such Executable Form under the terms of this License, or sublicense it under different terms, provided that the license for the Executable Form does not attempt to limit or alter the recipients' rights in the Source Code Form under this License. 3.3. Distribution of a Larger Work You may create and distribute a Larger Work under terms of Your choice, provided that You also comply with the requirements of this License for the Covered Software. If the Larger Work is a combination of Covered Software with a work governed by one or more Secondary Licenses, and the Covered Software is not Incompatible With Secondary Licenses, this License permits You to additionally distribute such Covered Software under the terms of such Secondary License(s), so that the recipient of the Larger Work may, at their option, further distribute the Covered Software under the terms of either this License or such Secondary License(s). 3.4. Notices You may not remove or alter the substance of any license notices (including copyright notices, patent notices, disclaimers of warranty, or limitations of liability) contained within the Source Code Form of the Covered Software, except that You may alter any license notices to the extent required to remedy known factual inaccuracies. 3.5. Application of Additional Terms You may choose to offer, and to charge a fee for, warranty, support, indemnity or liability obligations to one or more recipients of Covered Software. However, You may do so only on Your own behalf, and not on behalf of any Contributor. You must make it absolutely clear that any such warranty, support, indemnity, or liability obligation is offered by You alone, and You hereby agree to indemnify every Contributor for any liability incurred by such Contributor as a result of warranty, support, indemnity or liability terms You offer. You may include additional disclaimers of warranty and limitations of liability specific to any jurisdiction. 4. Inability to Comply Due to Statute or Regulation If it is impossible for You to comply with any of the terms of this License with respect to some or all of the Covered Software due to statute, judicial order, or regulation then You must: (a) comply with the terms of this License to the maximum extent possible; and (b) describe the limitations and the code they affect. Such description must be placed in a text file included with all distributions of the Covered Software under this License. Except to the extent prohibited by statute or regulation, such description must be sufficiently detailed for a recipient of ordinary skill to be able to understand it. 5. Termination 5.1. The rights granted under this License will terminate automatically if You fail to comply with any of its terms. However, if You become compliant, then the rights granted under this License from a particular Contributor are reinstated (a) provisionally, unless and until such Contributor explicitly and finally terminates Your grants, and (b) on an ongoing basis, if such Contributor fails to notify You of the non-compliance by some reasonable means prior to 60 days after You have come back into compliance. Moreover, Your grants from a particular Contributor are reinstated on an ongoing basis if such Contributor notifies You of the non-compliance by some reasonable means, this is the first time You have received notice of non-compliance with this License from such Contributor, and You become compliant prior to 30 days after Your receipt of the notice. 5.2. If You initiate litigation against any entity by asserting a patent infringement claim (excluding declaratory judgment actions, counter-claims, and cross-claims) alleging that a Contributor Version directly or indirectly infringes any patent, then the rights granted to You by any and all Contributors for the Covered Software under Section 2.1 of this License shall terminate. 5.3. In the event of termination under Sections 5.1 or 5.2 above, all end user license agreements (excluding distributors and resellers) which have been validly granted by You or Your distributors under this License prior to termination shall survive termination. * Disclaimer of Warranty * ------------------------- * * Covered Software is provided under this License on an \"as is\" * basis, without warranty of any kind, either expressed, implied, or * statutory, including, without limitation, warranties that the * Covered Software is free of defects, merchantable, fit for a * particular purpose or non-infringing. The entire risk as to the * quality and performance of the Covered Software is with You. * Should any Covered Software prove defective in any respect, You * (not any Contributor) assume the cost of any necessary servicing, * repair, or correction. This disclaimer of warranty constitutes an * essential part of this License. No use of any Covered Software is * authorized under this License except under this disclaimer. * * * Limitation of Liability * -------------------------- * * Under no circumstances and under no legal theory, whether tort * (including negligence), contract, or otherwise, shall any * Contributor, or anyone who distributes Covered Software as * permitted above, be liable to You for any direct, indirect, * special, incidental, or consequential damages of any character * including, without limitation, damages for lost profits, loss of * goodwill, work stoppage, computer failure or malfunction, or any * and all other commercial damages or losses, even if such party * shall have been informed of the possibility of such damages. This * limitation of liability shall not apply to liability for death or * personal injury resulting from such party's negligence to the * extent applicable law prohibits such limitation. Some * jurisdictions do not allow the exclusion or limitation of * incidental or consequential damages, so this exclusion and * limitation may not apply to You. * * 8. Litigation Any litigation relating to this License may be brought only in the courts of a jurisdiction where the defendant maintains its principal place of business and such litigation shall be governed by laws of that jurisdiction, without reference to its conflict-of-law provisions. Nothing in this Section shall prevent a party's ability to bring cross-claims or counter-claims. 9. Miscellaneous This License represents the complete agreement concerning the subject matter hereof. If any provision of this License is held to be unenforceable, such provision shall be reformed only to the extent necessary to make it enforceable. Any law or regulation which provides that the language of a contract shall be construed against the drafter shall not be used to construe this License against a Contributor. 10. Versions of the License 10.1. New Versions Mozilla Foundation is the license steward. Except as provided in Section 10.3, no one other than the license steward has the right to modify or publish new versions of this License. Each version will be given a distinguishing version number. 10.2. Effect of New Versions You may distribute the Covered Software under the terms of the version of the License under which You originally received the Covered Software, or under the terms of any subsequent version published by the license steward. 10.3. Modified Versions If you create software not governed by this License, and you want to create a new license for such software, you may create and use a modified version of this License if you rename the license and remove any references to the name of the license steward (except to note that such modified license differs from this License). 10.4. Distributing Source Code Form that is Incompatible With Secondary Licenses If You choose to distribute Source Code Form that is Incompatible With Secondary Licenses under the terms of this version of the License, the notice described in Exhibit B of this License must be attached. Exhibit A - Source Code Form License Notice This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at http://mozilla.org/MPL/2.0/. If it is not possible or desirable to put the notice in a particular file, then You may include the notice in a location (such as a LICENSE file in a relevant directory) where a recipient would be likely to look for such a notice. You may add additional accurate notices of copyright ownership. Exhibit B - \"Incompatible With Secondary Licenses\" Notice This Source Code Form is \"Incompatible With Secondary Licenses\", as defined by the Mozilla Public License, v. 2.0.","title":"Mpl 2.0"},{"location":"templates_licenses/mpl-2.0/#mozilla-public-license-version-20","text":"","title":"Mozilla Public License Version 2.0"},{"location":"templates_licenses/mpl-2.0/#1-definitions","text":"1.1. \"Contributor\" means each individual or legal entity that creates, contributes to the creation of, or owns Covered Software. 1.2. \"Contributor Version\" means the combination of the Contributions of others (if any) used by a Contributor and that particular Contributor's Contribution. 1.3. \"Contribution\" means Covered Software of a particular Contributor. 1.4. \"Covered Software\" means Source Code Form to which the initial Contributor has attached the notice in Exhibit A, the Executable Form of such Source Code Form, and Modifications of such Source Code Form, in each case including portions thereof. 1.5. \"Incompatible With Secondary Licenses\" means (a) that the initial Contributor has attached the notice described in Exhibit B to the Covered Software; or (b) that the Covered Software was made available under the terms of version 1.1 or earlier of the License, but not also under the terms of a Secondary License. 1.6. \"Executable Form\" means any form of the work other than Source Code Form. 1.7. \"Larger Work\" means a work that combines Covered Software with other material, in a separate file or files, that is not Covered Software. 1.8. \"License\" means this document. 1.9. \"Licensable\" means having the right to grant, to the maximum extent possible, whether at the time of the initial grant or subsequently, any and all of the rights conveyed by this License. 1.10. \"Modifications\" means any of the following: (a) any file in Source Code Form that results from an addition to, deletion from, or modification of the contents of Covered Software; or (b) any new file in Source Code Form that contains any Covered Software. 1.11. \"Patent Claims\" of a Contributor means any patent claim(s), including without limitation, method, process, and apparatus claims, in any patent Licensable by such Contributor that would be infringed, but for the grant of the License, by the making, using, selling, offering for sale, having made, import, or transfer of either its Contributions or its Contributor Version. 1.12. \"Secondary License\" means either the GNU General Public License, Version 2.0, the GNU Lesser General Public License, Version 2.1, the GNU Affero General Public License, Version 3.0, or any later versions of those licenses. 1.13. \"Source Code Form\" means the form of the work preferred for making modifications. 1.14. \"You\" (or \"Your\") means an individual or a legal entity exercising rights under this License. For legal entities, \"You\" includes any entity that controls, is controlled by, or is under common control with You. For purposes of this definition, \"control\" means (a) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (b) ownership of more than fifty percent (50%) of the outstanding shares or beneficial ownership of such entity.","title":"1. Definitions"},{"location":"templates_licenses/mpl-2.0/#2-license-grants-and-conditions","text":"2.1. Grants Each Contributor hereby grants You a world-wide, royalty-free, non-exclusive license: (a) under intellectual property rights (other than patent or trademark) Licensable by such Contributor to use, reproduce, make available, modify, display, perform, distribute, and otherwise exploit its Contributions, either on an unmodified basis, with Modifications, or as part of a Larger Work; and (b) under Patent Claims of such Contributor to make, use, sell, offer for sale, have made, import, and otherwise transfer either its Contributions or its Contributor Version. 2.2. Effective Date The licenses granted in Section 2.1 with respect to any Contribution become effective for each Contribution on the date the Contributor first distributes such Contribution. 2.3. Limitations on Grant Scope The licenses granted in this Section 2 are the only rights granted under this License. No additional rights or licenses will be implied from the distribution or licensing of Covered Software under this License. Notwithstanding Section 2.1(b) above, no patent license is granted by a Contributor: (a) for any code that a Contributor has removed from Covered Software; or (b) for infringements caused by: (i) Your and any other third party's modifications of Covered Software, or (ii) the combination of its Contributions with other software (except as part of its Contributor Version); or (c) under Patent Claims infringed by Covered Software in the absence of its Contributions. This License does not grant any rights in the trademarks, service marks, or logos of any Contributor (except as may be necessary to comply with the notice requirements in Section 3.4). 2.4. Subsequent Licenses No Contributor makes additional grants as a result of Your choice to distribute the Covered Software under a subsequent version of this License (see Section 10.2) or under the terms of a Secondary License (if permitted under the terms of Section 3.3). 2.5. Representation Each Contributor represents that the Contributor believes its Contributions are its original creation(s) or it has sufficient rights to grant the rights to its Contributions conveyed by this License. 2.6. Fair Use This License is not intended to limit any rights You have under applicable copyright doctrines of fair use, fair dealing, or other equivalents. 2.7. Conditions Sections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted in Section 2.1.","title":"2. License Grants and Conditions"},{"location":"templates_licenses/mpl-2.0/#3-responsibilities","text":"3.1. Distribution of Source Form All distribution of Covered Software in Source Code Form, including any Modifications that You create or to which You contribute, must be under the terms of this License. You must inform recipients that the Source Code Form of the Covered Software is governed by the terms of this License, and how they can obtain a copy of this License. You may not attempt to alter or restrict the recipients' rights in the Source Code Form. 3.2. Distribution of Executable Form If You distribute Covered Software in Executable Form then: (a) such Covered Software must also be made available in Source Code Form, as described in Section 3.1, and You must inform recipients of the Executable Form how they can obtain a copy of such Source Code Form by reasonable means in a timely manner, at a charge no more than the cost of distribution to the recipient; and (b) You may distribute such Executable Form under the terms of this License, or sublicense it under different terms, provided that the license for the Executable Form does not attempt to limit or alter the recipients' rights in the Source Code Form under this License. 3.3. Distribution of a Larger Work You may create and distribute a Larger Work under terms of Your choice, provided that You also comply with the requirements of this License for the Covered Software. If the Larger Work is a combination of Covered Software with a work governed by one or more Secondary Licenses, and the Covered Software is not Incompatible With Secondary Licenses, this License permits You to additionally distribute such Covered Software under the terms of such Secondary License(s), so that the recipient of the Larger Work may, at their option, further distribute the Covered Software under the terms of either this License or such Secondary License(s). 3.4. Notices You may not remove or alter the substance of any license notices (including copyright notices, patent notices, disclaimers of warranty, or limitations of liability) contained within the Source Code Form of the Covered Software, except that You may alter any license notices to the extent required to remedy known factual inaccuracies. 3.5. Application of Additional Terms You may choose to offer, and to charge a fee for, warranty, support, indemnity or liability obligations to one or more recipients of Covered Software. However, You may do so only on Your own behalf, and not on behalf of any Contributor. You must make it absolutely clear that any such warranty, support, indemnity, or liability obligation is offered by You alone, and You hereby agree to indemnify every Contributor for any liability incurred by such Contributor as a result of warranty, support, indemnity or liability terms You offer. You may include additional disclaimers of warranty and limitations of liability specific to any jurisdiction.","title":"3. Responsibilities"},{"location":"templates_licenses/mpl-2.0/#4-inability-to-comply-due-to-statute-or-regulation","text":"If it is impossible for You to comply with any of the terms of this License with respect to some or all of the Covered Software due to statute, judicial order, or regulation then You must: (a) comply with the terms of this License to the maximum extent possible; and (b) describe the limitations and the code they affect. Such description must be placed in a text file included with all distributions of the Covered Software under this License. Except to the extent prohibited by statute or regulation, such description must be sufficiently detailed for a recipient of ordinary skill to be able to understand it.","title":"4. Inability to Comply Due to Statute or Regulation"},{"location":"templates_licenses/mpl-2.0/#5-termination","text":"5.1. The rights granted under this License will terminate automatically if You fail to comply with any of its terms. However, if You become compliant, then the rights granted under this License from a particular Contributor are reinstated (a) provisionally, unless and until such Contributor explicitly and finally terminates Your grants, and (b) on an ongoing basis, if such Contributor fails to notify You of the non-compliance by some reasonable means prior to 60 days after You have come back into compliance. Moreover, Your grants from a particular Contributor are reinstated on an ongoing basis if such Contributor notifies You of the non-compliance by some reasonable means, this is the first time You have received notice of non-compliance with this License from such Contributor, and You become compliant prior to 30 days after Your receipt of the notice. 5.2. If You initiate litigation against any entity by asserting a patent infringement claim (excluding declaratory judgment actions, counter-claims, and cross-claims) alleging that a Contributor Version directly or indirectly infringes any patent, then the rights granted to You by any and all Contributors for the Covered Software under Section 2.1 of this License shall terminate. 5.3. In the event of termination under Sections 5.1 or 5.2 above, all end user license agreements (excluding distributors and resellers) which have been validly granted by You or Your distributors under this License prior to termination shall survive termination. * Disclaimer of Warranty * ------------------------- * * Covered Software is provided under this License on an \"as is\" * basis, without warranty of any kind, either expressed, implied, or * statutory, including, without limitation, warranties that the * Covered Software is free of defects, merchantable, fit for a * particular purpose or non-infringing. The entire risk as to the * quality and performance of the Covered Software is with You. * Should any Covered Software prove defective in any respect, You * (not any Contributor) assume the cost of any necessary servicing, * repair, or correction. This disclaimer of warranty constitutes an * essential part of this License. No use of any Covered Software is * authorized under this License except under this disclaimer. * * * Limitation of Liability * -------------------------- * * Under no circumstances and under no legal theory, whether tort * (including negligence), contract, or otherwise, shall any * Contributor, or anyone who distributes Covered Software as * permitted above, be liable to You for any direct, indirect, * special, incidental, or consequential damages of any character * including, without limitation, damages for lost profits, loss of * goodwill, work stoppage, computer failure or malfunction, or any * and all other commercial damages or losses, even if such party * shall have been informed of the possibility of such damages. This * limitation of liability shall not apply to liability for death or * personal injury resulting from such party's negligence to the * extent applicable law prohibits such limitation. Some * jurisdictions do not allow the exclusion or limitation of * incidental or consequential damages, so this exclusion and * limitation may not apply to You. * *","title":"5. Termination"},{"location":"templates_licenses/mpl-2.0/#8-litigation","text":"Any litigation relating to this License may be brought only in the courts of a jurisdiction where the defendant maintains its principal place of business and such litigation shall be governed by laws of that jurisdiction, without reference to its conflict-of-law provisions. Nothing in this Section shall prevent a party's ability to bring cross-claims or counter-claims.","title":"8. Litigation"},{"location":"templates_licenses/mpl-2.0/#9-miscellaneous","text":"This License represents the complete agreement concerning the subject matter hereof. If any provision of this License is held to be unenforceable, such provision shall be reformed only to the extent necessary to make it enforceable. Any law or regulation which provides that the language of a contract shall be construed against the drafter shall not be used to construe this License against a Contributor.","title":"9. Miscellaneous"},{"location":"templates_licenses/mpl-2.0/#10-versions-of-the-license","text":"10.1. New Versions Mozilla Foundation is the license steward. Except as provided in Section 10.3, no one other than the license steward has the right to modify or publish new versions of this License. Each version will be given a distinguishing version number. 10.2. Effect of New Versions You may distribute the Covered Software under the terms of the version of the License under which You originally received the Covered Software, or under the terms of any subsequent version published by the license steward. 10.3. Modified Versions If you create software not governed by this License, and you want to create a new license for such software, you may create and use a modified version of this License if you rename the license and remove any references to the name of the license steward (except to note that such modified license differs from this License). 10.4. Distributing Source Code Form that is Incompatible With Secondary Licenses If You choose to distribute Source Code Form that is Incompatible With Secondary Licenses under the terms of this version of the License, the notice described in Exhibit B of this License must be attached.","title":"10. Versions of the License"},{"location":"templates_licenses/mpl-2.0/#exhibit-a-source-code-form-license-notice","text":"This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at http://mozilla.org/MPL/2.0/. If it is not possible or desirable to put the notice in a particular file, then You may include the notice in a location (such as a LICENSE file in a relevant directory) where a recipient would be likely to look for such a notice. You may add additional accurate notices of copyright ownership.","title":"Exhibit A - Source Code Form License Notice"},{"location":"templates_licenses/mpl-2.0/#exhibit-b-incompatible-with-secondary-licenses-notice","text":"This Source Code Form is \"Incompatible With Secondary Licenses\", as defined by the Mozilla Public License, v. 2.0.","title":"Exhibit B - \"Incompatible With Secondary Licenses\" Notice"},{"location":"templates_repository_starting/CODE_OF_CONDUCT/","text":"Contributor Covenant Code of Conduct Our Pledge In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation. Our Standards Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting Our Responsibilities Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful. Scope This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers. Enforcement Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at yeray.rodriguez@edataconsulting.de. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership. Attribution This Code of Conduct is adapted from the Contributor Covenant , version 1.4, available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html For answers to common questions about this code of conduct, see https://www.contributor-covenant.org/faq","title":"Contributor Covenant Code of Conduct"},{"location":"templates_repository_starting/CODE_OF_CONDUCT/#contributor-covenant-code-of-conduct","text":"","title":"Contributor Covenant Code of Conduct"},{"location":"templates_repository_starting/CODE_OF_CONDUCT/#our-pledge","text":"In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.","title":"Our Pledge"},{"location":"templates_repository_starting/CODE_OF_CONDUCT/#our-standards","text":"Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting","title":"Our Standards"},{"location":"templates_repository_starting/CODE_OF_CONDUCT/#our-responsibilities","text":"Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.","title":"Our Responsibilities"},{"location":"templates_repository_starting/CODE_OF_CONDUCT/#scope","text":"This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.","title":"Scope"},{"location":"templates_repository_starting/CODE_OF_CONDUCT/#enforcement","text":"Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at yeray.rodriguez@edataconsulting.de. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.","title":"Enforcement"},{"location":"templates_repository_starting/CODE_OF_CONDUCT/#attribution","text":"This Code of Conduct is adapted from the Contributor Covenant , version 1.4, available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html For answers to common questions about this code of conduct, see https://www.contributor-covenant.org/faq","title":"Attribution"},{"location":"templates_repository_starting/CONTRIBUTING/","text":"Contributing to Boken Engine We are really happy to know that you want to contribute to the project! However, to ensure that the project keeps improving without compromising its integrity or quality, please follow this guide to ensure that your contribution is as useful as possible. Table of Contents What to know before contributing How can I contribute? Bug reporting New features suggestion Committing code to an issue Additional documentation Styleguides Swift styleguide Documentation styleguide Issues, commits and Pull Requests Commit messages What to know before contributing Please, be aware that Boken Engine is a Framework written in Swift . The code in the repository is the XCode project of the framework, and therefore, cannot be used directly to generate an iOS App. Boken Engine is neither an iOS Application, a library nor a package. All contributions must respect the identity of the project and do not add anything that infringe it (i.e. making the project contents-specific, coupling it to a particular App or preventing it to be reusable as a framework) How can I contribute? Bug reporting Before creating bug reports, please check if the problem has already been reported. If it has and the issue is still open, add a comment to the existing issue instead of opening a new one. If you find a Closed issue that seems like it is the same thing that you're experiencing, open a new issue and include a link to the original issue in the body of your new one. If the problem hasn't been reported, create a new GitHub issue , providing the following information: A clear and descriptive title for the issue to identify the problem. A description of the steps which reproduce the problem , as detailed as possible. Describe the behavior you observed after following the steps and why that behaviour is erroneous or unexpected. If possible, include screenshots and animated GIFs New features suggestion Features / improvement suggestions are submitted as GitHub issues . Please, before submitting a new one, please check if the improvement has already been suggested. If it has, add a comment to the existing issue instead of opening a new one. When creating a improvement issue, please provide the following information: Use a clear and descriptive title for the issue to identify the suggestion. Provide a description of the suggested enhancement as detailed as possible Explain why this improvement would be useful to most users Committing code to an issue Before writing any code for the repository, please review the Swift styleguides. Please, check that the new code will not compromise the quality, stability or security of the codebase. Any new code is added to the repository using Pull Requests that must be reviewed and approved by the community before being merged or rebased to the repository. When creating the commit and the pull request, please refer also to the section Issues, Commits and Pull Requests. Whenever is possible, new features should have Unit Tests to maintain (or increase) the code test coverage before adding it. Additional documentation New documentation contributions are also welcomed. They can improve the official documentation, add new examples or tutorials. The new documents must be added to the \"docs\" folder, and they must be created or modified using the same issue - pull request method as the code contributions. Document format should be MarkDown unless an alternative format is really necessary. Naming should adhere to underscore kebab-case . Styleguides - (NOTE: Must be customized for each project) Swift styleguide Fundamentals Clarity at the point of use is your most important goal. Clarity is more important than brevity Projects should not throw any warnings when built. Conventions Prefer methods and properties to free functions. Prefer to locate parameters with defaults toward the end. Conditional code checks \"the golden path\" (the most probable option) first. Inverted checks (like !incorrect) are discouraged because of poor readability. Use argument labels (unless not useful or part of a grammatical phrase) If possible, avoid any type. Use self only when required by the compiler (i.e. disambiguate properties from arguments in initializers) Code editing Use 2 blank spaces block indent Indentation is made with whitespaces, not with tabs Semicolons (;) are not used, either to terminate or separate statements. Annotations go onto a separate line before the declaration. Use OTBS brackets style Naming Include all the words needed to avoid ambiguity, but omit needless words Name entities according to their roles, rather than their type constraints. Names of types and protocols are UpperCamelCase. Everything else is lowerCamelCase. Declarations should form correct human-readable phrases when read aloud. Methods without side-effects have noun names (originalSize()). Methods with side effects have imperative verb names (sort()). Non-mutating methods that return new values have past participle names (sorted()) or a noun if the operation is naturally described by it (union()) Protocols that describe what something is should read as nouns (Collection). Protocols that describe a capability should be named using -able, -ible, or -ing (Equatable, ProgressReporting). Avoid abbreviations Comments Self-documented code is preferred over comments. When completely needed, comments must be written using double slash (//) instead of block syntax (/ ... /). Comments must be kept up-to-date or deleted. Public APIs should have HeaderDoc documentation using JavaDoc standards. Imports All imports go alphabetically sorted at the very beginning of the file. Empty lines between imports are not used. Import only the modules a source file requires. Do not insert a blank line between imports. Documentation styleguide Documentation should use MarkDown (.md) format. It must be written at least in English, but additional localized versions are also possible. Issues, commits and Pull Requests Each pull request for new commits must be related to a particular issue, and will be reviewed by the community before being merged or rebased to the codebase. Commit messages Use the present tense and imperative mood (\"Add feature\", \"Change cursor color\") Limit the first line to 72 characters or less Reference issues and pull requests liberally after the first line Consider starting the commit message with an applicable emoji (taken from the Atom Contribution Guidelines ): :art: :art: when improving the format/structure of the code :racehorse: :racehorse: when improving performance :non-potable_water: :non-potable_water: when plugging memory leaks :memo: :memo: when writing docs :bug: :bug: when fixing a bug :fire: :fire: when removing code or files :white_check_mark: :white_check_mark: when adding tests :lock: :lock: when dealing with security :shirt: :shirt: when removing linter warnings","title":"Contributing to Boken Engine"},{"location":"templates_repository_starting/CONTRIBUTING/#contributing-to-boken-engine","text":"We are really happy to know that you want to contribute to the project! However, to ensure that the project keeps improving without compromising its integrity or quality, please follow this guide to ensure that your contribution is as useful as possible.","title":"Contributing to Boken Engine"},{"location":"templates_repository_starting/CONTRIBUTING/#table-of-contents","text":"What to know before contributing How can I contribute? Bug reporting New features suggestion Committing code to an issue Additional documentation Styleguides Swift styleguide Documentation styleguide Issues, commits and Pull Requests Commit messages","title":"Table of Contents"},{"location":"templates_repository_starting/CONTRIBUTING/#what-to-know-before-contributing","text":"Please, be aware that Boken Engine is a Framework written in Swift . The code in the repository is the XCode project of the framework, and therefore, cannot be used directly to generate an iOS App. Boken Engine is neither an iOS Application, a library nor a package. All contributions must respect the identity of the project and do not add anything that infringe it (i.e. making the project contents-specific, coupling it to a particular App or preventing it to be reusable as a framework)","title":"What to know before contributing"},{"location":"templates_repository_starting/CONTRIBUTING/#how-can-i-contribute","text":"","title":"How can I contribute?"},{"location":"templates_repository_starting/CONTRIBUTING/#bug-reporting","text":"Before creating bug reports, please check if the problem has already been reported. If it has and the issue is still open, add a comment to the existing issue instead of opening a new one. If you find a Closed issue that seems like it is the same thing that you're experiencing, open a new issue and include a link to the original issue in the body of your new one. If the problem hasn't been reported, create a new GitHub issue , providing the following information: A clear and descriptive title for the issue to identify the problem. A description of the steps which reproduce the problem , as detailed as possible. Describe the behavior you observed after following the steps and why that behaviour is erroneous or unexpected. If possible, include screenshots and animated GIFs","title":"Bug reporting"},{"location":"templates_repository_starting/CONTRIBUTING/#new-features-suggestion","text":"Features / improvement suggestions are submitted as GitHub issues . Please, before submitting a new one, please check if the improvement has already been suggested. If it has, add a comment to the existing issue instead of opening a new one. When creating a improvement issue, please provide the following information: Use a clear and descriptive title for the issue to identify the suggestion. Provide a description of the suggested enhancement as detailed as possible Explain why this improvement would be useful to most users","title":"New features suggestion"},{"location":"templates_repository_starting/CONTRIBUTING/#committing-code-to-an-issue","text":"Before writing any code for the repository, please review the Swift styleguides. Please, check that the new code will not compromise the quality, stability or security of the codebase. Any new code is added to the repository using Pull Requests that must be reviewed and approved by the community before being merged or rebased to the repository. When creating the commit and the pull request, please refer also to the section Issues, Commits and Pull Requests. Whenever is possible, new features should have Unit Tests to maintain (or increase) the code test coverage before adding it.","title":"Committing code to an issue"},{"location":"templates_repository_starting/CONTRIBUTING/#additional-documentation","text":"New documentation contributions are also welcomed. They can improve the official documentation, add new examples or tutorials. The new documents must be added to the \"docs\" folder, and they must be created or modified using the same issue - pull request method as the code contributions. Document format should be MarkDown unless an alternative format is really necessary. Naming should adhere to underscore kebab-case .","title":"Additional documentation"},{"location":"templates_repository_starting/CONTRIBUTING/#styleguides-note-must-be-customized-for-each-project","text":"","title":"Styleguides - (NOTE: Must be customized for each project)"},{"location":"templates_repository_starting/CONTRIBUTING/#swift-styleguide","text":"","title":"Swift styleguide"},{"location":"templates_repository_starting/CONTRIBUTING/#fundamentals","text":"Clarity at the point of use is your most important goal. Clarity is more important than brevity Projects should not throw any warnings when built.","title":"Fundamentals"},{"location":"templates_repository_starting/CONTRIBUTING/#conventions","text":"Prefer methods and properties to free functions. Prefer to locate parameters with defaults toward the end. Conditional code checks \"the golden path\" (the most probable option) first. Inverted checks (like !incorrect) are discouraged because of poor readability. Use argument labels (unless not useful or part of a grammatical phrase) If possible, avoid any type. Use self only when required by the compiler (i.e. disambiguate properties from arguments in initializers)","title":"Conventions"},{"location":"templates_repository_starting/CONTRIBUTING/#code-editing","text":"Use 2 blank spaces block indent Indentation is made with whitespaces, not with tabs Semicolons (;) are not used, either to terminate or separate statements. Annotations go onto a separate line before the declaration. Use OTBS brackets style","title":"Code editing"},{"location":"templates_repository_starting/CONTRIBUTING/#naming","text":"Include all the words needed to avoid ambiguity, but omit needless words Name entities according to their roles, rather than their type constraints. Names of types and protocols are UpperCamelCase. Everything else is lowerCamelCase. Declarations should form correct human-readable phrases when read aloud. Methods without side-effects have noun names (originalSize()). Methods with side effects have imperative verb names (sort()). Non-mutating methods that return new values have past participle names (sorted()) or a noun if the operation is naturally described by it (union()) Protocols that describe what something is should read as nouns (Collection). Protocols that describe a capability should be named using -able, -ible, or -ing (Equatable, ProgressReporting). Avoid abbreviations","title":"Naming"},{"location":"templates_repository_starting/CONTRIBUTING/#comments","text":"Self-documented code is preferred over comments. When completely needed, comments must be written using double slash (//) instead of block syntax (/ ... /). Comments must be kept up-to-date or deleted. Public APIs should have HeaderDoc documentation using JavaDoc standards.","title":"Comments"},{"location":"templates_repository_starting/CONTRIBUTING/#imports","text":"All imports go alphabetically sorted at the very beginning of the file. Empty lines between imports are not used. Import only the modules a source file requires. Do not insert a blank line between imports.","title":"Imports"},{"location":"templates_repository_starting/CONTRIBUTING/#documentation-styleguide","text":"Documentation should use MarkDown (.md) format. It must be written at least in English, but additional localized versions are also possible.","title":"Documentation styleguide"},{"location":"templates_repository_starting/CONTRIBUTING/#issues-commits-and-pull-requests","text":"Each pull request for new commits must be related to a particular issue, and will be reviewed by the community before being merged or rebased to the codebase.","title":"Issues, commits and Pull Requests"},{"location":"templates_repository_starting/CONTRIBUTING/#commit-messages","text":"Use the present tense and imperative mood (\"Add feature\", \"Change cursor color\") Limit the first line to 72 characters or less Reference issues and pull requests liberally after the first line Consider starting the commit message with an applicable emoji (taken from the Atom Contribution Guidelines ): :art: :art: when improving the format/structure of the code :racehorse: :racehorse: when improving performance :non-potable_water: :non-potable_water: when plugging memory leaks :memo: :memo: when writing docs :bug: :bug: when fixing a bug :fire: :fire: when removing code or files :white_check_mark: :white_check_mark: when adding tests :lock: :lock: when dealing with security :shirt: :shirt: when removing linter warnings","title":"Commit messages"},{"location":"templates_repository_starting/GOVERNANCE_BD/","text":"Governance Overview This project is led by a benevolent dictator and managed by the community. That is, the community actively contributes to the day-to-day maintenance of the project, but the general strategic line is drawn by the benevolent dictator. In case of disagreement, they have the last word. It is the benevolent dictator\u2019s job to resolve disputes within the community and to ensure that the project is able to progress in a coordinated way. In turn, it is the community\u2019s job to guide the decisions of the benevolent dictator through active engagement and contribution. Roles And Responsibilities Benevolent dictator (project lead) Typically, the benevolent dictator, or project lead, is self-appointed. However, because the community always has the ability to fork, this person is fully answerable to the community. The project lead\u2019s role is a difficult one: they set the strategic objectives of the project and communicate these clearly to the community. They also have to understand the community as a whole and strive to satisfy as many conflicting needs as possible, while ensuring that the project survives in the long term. In many ways, the role of the benevolent dictator is less about dictatorship and more about diplomacy. The key is to ensure that, as the project expands, the right people are given influence over it and the community rallies behind the vision of the project lead. The lead\u2019s job is then to ensure that the committers (see below) make the right decisions on behalf of the project. Generally speaking, as long as the committers are aligned with the project\u2019s strategy, the project lead will allow them to proceed as they desire. Committers Committers are contributors who have made several valuable contributions to the project and are now relied upon to both write code directly to the repository and screen the contributions of others. In many cases they are programmers but it is also possible that they contribute in a different role. Typically, a committer will focus on a specific aspect of the project, and will bring a level of expertise and understanding that earns them the respect of the community and the project lead. The role of committer is not an official one, it is simply a position that influential members of the community will find themselves in as the project lead looks to them for guidance and support. Committers have no authority over the overall direction of the project. However, they do have the ear of the project lead. It is a committer\u2019s job to ensure that the lead is aware of the community\u2019s needs and collective objectives, and to help develop or elicit appropriate contributions to the project. Often, committers are given informal control over their specific areas of responsibility, and are assigned rights to directly modify certain areas of the source code. That is, although committers do not have explicit decision-making authority, they will often find that their actions are synonymous with the decisions made by the lead. Contributors Contributors are community members who either have no desire to become committers, or have not yet been given the opportunity by the benevolent dictator. They make valuable contributions, such as those outlined in the list below, but generally do not have the authority to make direct changes to the project code. Contributors engage with the project through issues in the issue tracker. Anyone can become a contributor. There is no expectation of commitment to the project, no specific skill requirements and no selection process. To become a contributor, a community member simply has to perform one or more actions that are beneficial to the project. Some contributors will already be engaging with the project as users, but will also find themselves doing one or more of the following: supporting new users (current users often provide the most effective new user support) reporting bugs identifying requirements supplying graphics and web design programming assisting with project infrastructure writing documentation fixing bugs adding features As contributors gain experience and familiarity with the project, they may find that the project lead starts relying on them more and more. When this begins to happen, they gradually adopt the role of committer, as described above. Users Users are community members who have a need for the project. They are the most important members of the community: without them, the project would have no purpose. Anyone can be a user; there are no specific requirements. Users should be encouraged to participate in the life of the project and the community as much as possible. User contributions enable the project team to ensure that they are satisfying the needs of those users. Common user activities include (but are not limited to): evangelising about the project informing developers of project strengths and weaknesses from a new user\u2019s perspective providing moral support (a \u2018thank you\u2019 goes a long way) providing financial support Users who continue to engage with the project and its community will often find themselves becoming more and more involved. Such users may then go on to become contributors, as described above. Support All participants in the community are encouraged to provide support for new users within the project management infrastructure. This support is provided as a way of growing the community. Those seeking support should recognise that all support activity within the project is voluntary and is therefore provided as and when time allows. A user requiring guaranteed response times or results should therefore seek to purchase a support contract from a vendor. (Of course, that vendor should be an active member of the community.) However, for those willing to engage with the project on its own terms, and willing to help support other users, the community support channels are ideal. Contribution Process Anyone can contribute to the project, regardless of their skills, as there are many ways to contribute. For instance, a contributor might be active on the issue tracker, or might supply patches. The various ways of contributing are described in more detail in CONTRIBUTING . The issue tracker is the most appropriate place for a contributor to ask for help when making their first contribution. Decision-Making Process The benevolent dictatorship model does not need a formal conflict resolution process, since the project lead\u2019s word is final. If the community chooses to question the wisdom of the actions of a committer, the project lead can review their decisions by checking the email archives, and either uphold or reverse them.","title":"Governance"},{"location":"templates_repository_starting/GOVERNANCE_BD/#governance","text":"","title":"Governance"},{"location":"templates_repository_starting/GOVERNANCE_BD/#overview","text":"This project is led by a benevolent dictator and managed by the community. That is, the community actively contributes to the day-to-day maintenance of the project, but the general strategic line is drawn by the benevolent dictator. In case of disagreement, they have the last word. It is the benevolent dictator\u2019s job to resolve disputes within the community and to ensure that the project is able to progress in a coordinated way. In turn, it is the community\u2019s job to guide the decisions of the benevolent dictator through active engagement and contribution.","title":"Overview"},{"location":"templates_repository_starting/GOVERNANCE_BD/#roles-and-responsibilities","text":"","title":"Roles And Responsibilities"},{"location":"templates_repository_starting/GOVERNANCE_BD/#benevolent-dictator-project-lead","text":"Typically, the benevolent dictator, or project lead, is self-appointed. However, because the community always has the ability to fork, this person is fully answerable to the community. The project lead\u2019s role is a difficult one: they set the strategic objectives of the project and communicate these clearly to the community. They also have to understand the community as a whole and strive to satisfy as many conflicting needs as possible, while ensuring that the project survives in the long term. In many ways, the role of the benevolent dictator is less about dictatorship and more about diplomacy. The key is to ensure that, as the project expands, the right people are given influence over it and the community rallies behind the vision of the project lead. The lead\u2019s job is then to ensure that the committers (see below) make the right decisions on behalf of the project. Generally speaking, as long as the committers are aligned with the project\u2019s strategy, the project lead will allow them to proceed as they desire.","title":"Benevolent dictator (project lead)"},{"location":"templates_repository_starting/GOVERNANCE_BD/#committers","text":"Committers are contributors who have made several valuable contributions to the project and are now relied upon to both write code directly to the repository and screen the contributions of others. In many cases they are programmers but it is also possible that they contribute in a different role. Typically, a committer will focus on a specific aspect of the project, and will bring a level of expertise and understanding that earns them the respect of the community and the project lead. The role of committer is not an official one, it is simply a position that influential members of the community will find themselves in as the project lead looks to them for guidance and support. Committers have no authority over the overall direction of the project. However, they do have the ear of the project lead. It is a committer\u2019s job to ensure that the lead is aware of the community\u2019s needs and collective objectives, and to help develop or elicit appropriate contributions to the project. Often, committers are given informal control over their specific areas of responsibility, and are assigned rights to directly modify certain areas of the source code. That is, although committers do not have explicit decision-making authority, they will often find that their actions are synonymous with the decisions made by the lead.","title":"Committers"},{"location":"templates_repository_starting/GOVERNANCE_BD/#contributors","text":"Contributors are community members who either have no desire to become committers, or have not yet been given the opportunity by the benevolent dictator. They make valuable contributions, such as those outlined in the list below, but generally do not have the authority to make direct changes to the project code. Contributors engage with the project through issues in the issue tracker. Anyone can become a contributor. There is no expectation of commitment to the project, no specific skill requirements and no selection process. To become a contributor, a community member simply has to perform one or more actions that are beneficial to the project. Some contributors will already be engaging with the project as users, but will also find themselves doing one or more of the following: supporting new users (current users often provide the most effective new user support) reporting bugs identifying requirements supplying graphics and web design programming assisting with project infrastructure writing documentation fixing bugs adding features As contributors gain experience and familiarity with the project, they may find that the project lead starts relying on them more and more. When this begins to happen, they gradually adopt the role of committer, as described above.","title":"Contributors"},{"location":"templates_repository_starting/GOVERNANCE_BD/#users","text":"Users are community members who have a need for the project. They are the most important members of the community: without them, the project would have no purpose. Anyone can be a user; there are no specific requirements. Users should be encouraged to participate in the life of the project and the community as much as possible. User contributions enable the project team to ensure that they are satisfying the needs of those users. Common user activities include (but are not limited to): evangelising about the project informing developers of project strengths and weaknesses from a new user\u2019s perspective providing moral support (a \u2018thank you\u2019 goes a long way) providing financial support Users who continue to engage with the project and its community will often find themselves becoming more and more involved. Such users may then go on to become contributors, as described above.","title":"Users"},{"location":"templates_repository_starting/GOVERNANCE_BD/#support","text":"All participants in the community are encouraged to provide support for new users within the project management infrastructure. This support is provided as a way of growing the community. Those seeking support should recognise that all support activity within the project is voluntary and is therefore provided as and when time allows. A user requiring guaranteed response times or results should therefore seek to purchase a support contract from a vendor. (Of course, that vendor should be an active member of the community.) However, for those willing to engage with the project on its own terms, and willing to help support other users, the community support channels are ideal.","title":"Support"},{"location":"templates_repository_starting/GOVERNANCE_BD/#contribution-process","text":"Anyone can contribute to the project, regardless of their skills, as there are many ways to contribute. For instance, a contributor might be active on the issue tracker, or might supply patches. The various ways of contributing are described in more detail in CONTRIBUTING . The issue tracker is the most appropriate place for a contributor to ask for help when making their first contribution.","title":"Contribution Process"},{"location":"templates_repository_starting/GOVERNANCE_BD/#decision-making-process","text":"The benevolent dictatorship model does not need a formal conflict resolution process, since the project lead\u2019s word is final. If the community chooses to question the wisdom of the actions of a committer, the project lead can review their decisions by checking the email archives, and either uphold or reverse them.","title":"Decision-Making Process"},{"location":"templates_repository_starting/contributor_agreement_v01/","text":"The Nautilus Cyberneering Contributor Agreement [Version 2021-11-10] Goal We require that contributors to Nautilus (as defined below) agree to this Nautilus Cyberneering Contributor Agreement (NCCA) to ensure that contributions to Nautilus have acceptable licensing terms. Non-Goals The NCCA is not a copyright assignment agreement. The NCCA does not somehow supersede the existing licensing terms that apply to Nautilus contributions. There are two important subpoints here. First, the NCCA does not apply to upstream code (or other material) that you didn't write; indeed, it would be preposterous for it to attempt to do so. Note the narrow way in which we have defined capital-c \"Contribution\". Second, the main provision of the NCCA specifies that a default license will apply to code that you wrote, but only to the extent that you have not bothered to put an explicit license on it. Therefore, the NCCA is not some sort of special permissive license granted to any party, despite the explicit choice of a more restrictive license by you or by upstream developers. Terms Section 1 \u2013 Definitions \"Acceptable License For Nautilus\" means a license selected from the appropriate categorical sublist of the full list of acceptable licenses for Nautilus, currently located at https://nautilus-cyberneering.de/licensing/ , as that list may be revised from time to time by Nautilus Cyberneering GmbH. \"Acceptable Licenses For Nautilus\" means that full list. \"AGPLv3\" means the license identified as \"Affero General Public License 3.0\", as published at https://www.gnu.org/licenses/agpl-3.0.en.html . \"CC-0\" means the Creative Commons 1.0 Universal license, as published at https://creativecommons.org/publicdomain/zero/1.0/legalcode . \"CC-BY-SA\" means the Creative Commons Attribution-ShareAlike 4.0 International license, as published at https://creativecommons.org/licenses/by-sa/4.0/legalcode . \"Code\" means (i) software code, (ii) any other functional material whose principal purpose is to control or facilitate the building of packages, such as an RPM spec file, (iii) font files, and (iv) other kinds of copyrightable material that the Nautilus Cyberneering GmbH has classified as \"code\" rather than \"content\". \"Content\" means any copyrightable material that is not Code, such as, without limitation, (i) non-functional data sets, (ii) documentation, (iii) wiki edits, (iv) music files, (v) graphic image files, (vi) help files, and (vii) other kinds of copyrightable material that the Nautilus Council has classified as \"content\" rather than \"code\". \"Contribution\" means a Work that You created, excluding any portion that was created by someone else. (For example, if You Submit a package to Nautilus, the spec file You write may be a Contribution, but all the upstream code in the associated Package that You did not write is not a Contribution for purposes of this NCCA.) A Contribution consists either of Code or of Content. \"Current Default License\" , with respect to a Contribution, means (i) if the Contribution is Code, the AGPLv3 License, and (ii) if the Contribution is Content, CC-BY-SA. \"Future Public Domain License\" , with respect to a Contribution, means (i) if the Contribution is Code, the MIT-0 License, and (ii) if the Contribution is Content, CC-0. \"Licensed\" means covered by explicit licensing terms that are conspicuous and readily discernible to recipients. \"Submit\" means to use some mode of digital communication (for example, without limitation, mailing lists, bug tracking systems, and source code version control systems administered by Nautilus) to voluntarily provide a Contribution to Nautilus. \"Unlicensed\" means not Licensed. \"MIT-0\" means the license identified as \"MIT No Attribution\", as published at https://opensource.org/licenses/MIT-0 . \"Nautilus\" means the community project led by the Nautilus Cyberneering GmbH https://nautilus-cyberneering.de/ . \"Nautilus Community\" means (i) all Nautilus participants, and (ii) all persons receiving Contributions directly or indirectly from or through Nautilus. \"Work\" means a copyrightable work of authorship. A Work may be a portion of a larger Work, and a Work may be a modification of or addition to another Work. \"You\" means the individual accepting this instance of the NCCA. Section 2 \u2013 List of Acceptable Licenses for Nautilus CC-BY-SA CC-0 AGPLv3 MIT-0 Section 3 \u2013 Copyright Permission Required for All Contributions If You are not the copyright holder of a given Contribution that You wish to Submit to Nautilus (for example, if Your employer or university holds copyright in it), it is Your responsibility to first obtain authorization from the copyright holder to Submit the Contribution under the terms of this NCCA on behalf of, or otherwise with the permission of, that copyright holder. One form of such authorization is for the copyright holder to place, or permit You to place, an Acceptable License For Nautilus on the Contribution. Section 4 \u2013 Licensed Contributions If Your Contribution is Licensed, Your Contribution will be governed by the terms under which it has been licensed. Section 5 \u2013 Default Licensing of Unlicensed Contributions If You Submit an Unlicensed Contribution to Nautilus, the license to the Nautilus Community for that Contribution shall be the Current Default License. The Nautilus Cyberneering GmbH may, by public announcement, subsequently designate an additional or alternative default license for a given category of Contribution (a \"Later Default License\"). A Later Default License shall be chosen from the appropriate categorical sublist of Acceptable Licenses For Nautilus. Once a Later Default License has been designated, Your Unlicensed Contribution shall also be licensed to the Nautilus Community under that Later Default License. Such designation shall not affect the continuing applicability of the Current Default License to Your Contribution. You consent to having Nautilus provide reasonable notice of Your licensing of Your Contribution under the Current Default License (and, if applicable, a Later Default License) in a manner determined by Nautilus. Section 6 \u2013 Automatic Future Public Domain License You consent that your contribution under the Current Default License is granted the Future Public Domain License automatically after 5 years of submission. Section 7 \u2013 Public Domain United States Government Works Sections 3 through 6 of this NCCA do not apply to any Contribution to the extent that it is a work of the United States Government for which copyright is unavailable under 17 U.S.C. 105. Section 8 \u2013 Acceptance You must signify Your assent to the terms of this NCCA through specific electronic means established by Nautilus. You may also, at Your option, and without eliminating the requirement set forth in the preceding paragraph, send a copy of this NCCA, bearing Your written signature indicating Your acceptance of its terms, by email to legal@nautilus-cyberneering.de, or by postal mail to: Nautilus Legal c/o Nautilus Cyberneering GmbH Oberhachingerstr. 46B 2031 Gr\u00fcnwald Germany Section 9 \u2013 Notes This document is based upon: The Fedora Project Contributor Agreement . [Version 2021-05-04]","title":"The Nautilus Cyberneering Contributor Agreement"},{"location":"templates_repository_starting/contributor_agreement_v01/#the-nautilus-cyberneering-contributor-agreement","text":"[Version 2021-11-10]","title":"The Nautilus Cyberneering Contributor Agreement"},{"location":"templates_repository_starting/contributor_agreement_v01/#goal","text":"We require that contributors to Nautilus (as defined below) agree to this Nautilus Cyberneering Contributor Agreement (NCCA) to ensure that contributions to Nautilus have acceptable licensing terms.","title":"Goal"},{"location":"templates_repository_starting/contributor_agreement_v01/#non-goals","text":"The NCCA is not a copyright assignment agreement. The NCCA does not somehow supersede the existing licensing terms that apply to Nautilus contributions. There are two important subpoints here. First, the NCCA does not apply to upstream code (or other material) that you didn't write; indeed, it would be preposterous for it to attempt to do so. Note the narrow way in which we have defined capital-c \"Contribution\". Second, the main provision of the NCCA specifies that a default license will apply to code that you wrote, but only to the extent that you have not bothered to put an explicit license on it. Therefore, the NCCA is not some sort of special permissive license granted to any party, despite the explicit choice of a more restrictive license by you or by upstream developers.","title":"Non-Goals"},{"location":"templates_repository_starting/contributor_agreement_v01/#terms","text":"","title":"Terms"},{"location":"templates_repository_starting/contributor_agreement_v01/#section-1-definitions","text":"\"Acceptable License For Nautilus\" means a license selected from the appropriate categorical sublist of the full list of acceptable licenses for Nautilus, currently located at https://nautilus-cyberneering.de/licensing/ , as that list may be revised from time to time by Nautilus Cyberneering GmbH. \"Acceptable Licenses For Nautilus\" means that full list. \"AGPLv3\" means the license identified as \"Affero General Public License 3.0\", as published at https://www.gnu.org/licenses/agpl-3.0.en.html . \"CC-0\" means the Creative Commons 1.0 Universal license, as published at https://creativecommons.org/publicdomain/zero/1.0/legalcode . \"CC-BY-SA\" means the Creative Commons Attribution-ShareAlike 4.0 International license, as published at https://creativecommons.org/licenses/by-sa/4.0/legalcode . \"Code\" means (i) software code, (ii) any other functional material whose principal purpose is to control or facilitate the building of packages, such as an RPM spec file, (iii) font files, and (iv) other kinds of copyrightable material that the Nautilus Cyberneering GmbH has classified as \"code\" rather than \"content\". \"Content\" means any copyrightable material that is not Code, such as, without limitation, (i) non-functional data sets, (ii) documentation, (iii) wiki edits, (iv) music files, (v) graphic image files, (vi) help files, and (vii) other kinds of copyrightable material that the Nautilus Council has classified as \"content\" rather than \"code\". \"Contribution\" means a Work that You created, excluding any portion that was created by someone else. (For example, if You Submit a package to Nautilus, the spec file You write may be a Contribution, but all the upstream code in the associated Package that You did not write is not a Contribution for purposes of this NCCA.) A Contribution consists either of Code or of Content. \"Current Default License\" , with respect to a Contribution, means (i) if the Contribution is Code, the AGPLv3 License, and (ii) if the Contribution is Content, CC-BY-SA. \"Future Public Domain License\" , with respect to a Contribution, means (i) if the Contribution is Code, the MIT-0 License, and (ii) if the Contribution is Content, CC-0. \"Licensed\" means covered by explicit licensing terms that are conspicuous and readily discernible to recipients. \"Submit\" means to use some mode of digital communication (for example, without limitation, mailing lists, bug tracking systems, and source code version control systems administered by Nautilus) to voluntarily provide a Contribution to Nautilus. \"Unlicensed\" means not Licensed. \"MIT-0\" means the license identified as \"MIT No Attribution\", as published at https://opensource.org/licenses/MIT-0 . \"Nautilus\" means the community project led by the Nautilus Cyberneering GmbH https://nautilus-cyberneering.de/ . \"Nautilus Community\" means (i) all Nautilus participants, and (ii) all persons receiving Contributions directly or indirectly from or through Nautilus. \"Work\" means a copyrightable work of authorship. A Work may be a portion of a larger Work, and a Work may be a modification of or addition to another Work. \"You\" means the individual accepting this instance of the NCCA.","title":"Section 1 \u2013 Definitions"},{"location":"templates_repository_starting/contributor_agreement_v01/#section-2-list-of-acceptable-licenses-for-nautilus","text":"CC-BY-SA CC-0 AGPLv3 MIT-0","title":"Section 2 \u2013 List of Acceptable Licenses for Nautilus"},{"location":"templates_repository_starting/contributor_agreement_v01/#section-3-copyright-permission-required-for-all-contributions","text":"If You are not the copyright holder of a given Contribution that You wish to Submit to Nautilus (for example, if Your employer or university holds copyright in it), it is Your responsibility to first obtain authorization from the copyright holder to Submit the Contribution under the terms of this NCCA on behalf of, or otherwise with the permission of, that copyright holder. One form of such authorization is for the copyright holder to place, or permit You to place, an Acceptable License For Nautilus on the Contribution.","title":"Section 3 \u2013 Copyright Permission Required for All Contributions"},{"location":"templates_repository_starting/contributor_agreement_v01/#section-4-licensed-contributions","text":"If Your Contribution is Licensed, Your Contribution will be governed by the terms under which it has been licensed.","title":"Section 4 \u2013 Licensed Contributions"},{"location":"templates_repository_starting/contributor_agreement_v01/#section-5-default-licensing-of-unlicensed-contributions","text":"If You Submit an Unlicensed Contribution to Nautilus, the license to the Nautilus Community for that Contribution shall be the Current Default License. The Nautilus Cyberneering GmbH may, by public announcement, subsequently designate an additional or alternative default license for a given category of Contribution (a \"Later Default License\"). A Later Default License shall be chosen from the appropriate categorical sublist of Acceptable Licenses For Nautilus. Once a Later Default License has been designated, Your Unlicensed Contribution shall also be licensed to the Nautilus Community under that Later Default License. Such designation shall not affect the continuing applicability of the Current Default License to Your Contribution. You consent to having Nautilus provide reasonable notice of Your licensing of Your Contribution under the Current Default License (and, if applicable, a Later Default License) in a manner determined by Nautilus.","title":"Section 5 \u2013 Default Licensing of Unlicensed Contributions"},{"location":"templates_repository_starting/contributor_agreement_v01/#section-6-automatic-future-public-domain-license","text":"You consent that your contribution under the Current Default License is granted the Future Public Domain License automatically after 5 years of submission.","title":"Section 6 \u2013 Automatic Future Public Domain License"},{"location":"templates_repository_starting/contributor_agreement_v01/#section-7-public-domain-united-states-government-works","text":"Sections 3 through 6 of this NCCA do not apply to any Contribution to the extent that it is a work of the United States Government for which copyright is unavailable under 17 U.S.C. 105.","title":"Section 7 \u2013 Public Domain United States Government Works"},{"location":"templates_repository_starting/contributor_agreement_v01/#section-8-acceptance","text":"You must signify Your assent to the terms of this NCCA through specific electronic means established by Nautilus. You may also, at Your option, and without eliminating the requirement set forth in the preceding paragraph, send a copy of this NCCA, bearing Your written signature indicating Your acceptance of its terms, by email to legal@nautilus-cyberneering.de, or by postal mail to: Nautilus Legal c/o Nautilus Cyberneering GmbH Oberhachingerstr. 46B 2031 Gr\u00fcnwald Germany","title":"Section 8 \u2013 Acceptance"},{"location":"templates_repository_starting/contributor_agreement_v01/#section-9-notes","text":"This document is based upon: The Fedora Project Contributor Agreement . [Version 2021-05-04]","title":"Section 9 \u2013 Notes"}]}